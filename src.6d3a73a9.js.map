{"version":3,"sources":["node_modules/webfontloader/webfontloader.js","src/scripts/helpers.ts","node_modules/signals/dist/signals.js","src/classes/Point.ts","src/classes/Rectangle.ts","node_modules/canvas-dpi-scaler/canvas-dpi-scaler.js","src/classes/Canvas.ts","src/classes/Data.ts","src/classes/Label.ts","src/classes/Tooltip.ts","src/classes/Plot.ts","src/classes/Transformer.ts","src/classes/Ticks.ts","src/classes/Grid.ts","src/classes/Axis.ts","src/classes/BackGround.ts","src/classes/series/SeriesBase.ts","src/classes/series/SeriesXY.ts","src/classes/Chart.ts","node_modules/bezier-easing/src/index.js","src/configs/indices-chart-black.ts","src/configs/indices-chart-colored.ts","src/configs/indices-chart.ts","src/classes/Legend.ts","src/configs/square-chart.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.6d3a73a9.js","sourceRoot":"..","sourcesContent":["/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n","// рукописная загрузка из CSV\r\nexport function customLoadDataFromCsv(filePath: string) {\r\n    return fetch(filePath).then((response) => {\r\n        var contentType = response.headers.get(\"content-type\");\r\n        if (contentType && (contentType.includes(\"text/csv\") || contentType.includes(\"application/octet-stream\"))) {\r\n            return response.ok ? response.text() : Promise.reject(response.status);\r\n        }\r\n        throw new TypeError(\"Oops, we haven't got CSV!\");\r\n    })\r\n}\r\n\r\n// csv to array\r\n// @ts-ignore\r\nexport function csvToCols(strData, strDelimiter) {\r\n    strDelimiter = strDelimiter || \",\";\r\n    let rowData = strData.split(\"\\n\");\r\n\r\n    let colResult = [];\r\n    for (let i = rowData[0].split(strDelimiter).length - 1; i >= 0; i--) colResult.push([]);\r\n    for (let i = 0, l = rowData.length; i < l; i++) {\r\n        if (rowData[i].length) {\r\n            let row = rowData[i].split(strDelimiter);\r\n            // @ts-ignore\r\n            for (let j = row.length - 1; j >= 0; j--) colResult[j].push(row[j]);\r\n        }\r\n    }\r\n    return colResult;\r\n}","/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n/*global define:false, require:false, exports:false, module:false, signals:false */\n\n/** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */\n\n(function(global){\n\n    // SignalBinding -------------------------------------------------\n    //================================================================\n\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */\n    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */\n        this._listener = listener;\n\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */\n        this._isOnce = isOnce;\n\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */\n        this.context = listenerContext;\n\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */\n        this._signal = signal;\n\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */\n        this._priority = priority || 0;\n    }\n\n    SignalBinding.prototype = {\n\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */\n        params : null,\n\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */\n        execute : function (paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) {\n                    this.detach();\n                }\n            }\n            return handlerReturn;\n        },\n\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */\n        detach : function () {\n            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */\n        isBound : function () {\n            return (!!this._signal && !!this._listener);\n        },\n\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */\n        isOnce : function () {\n            return this._isOnce;\n        },\n\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */\n        getListener : function () {\n            return this._listener;\n        },\n\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */\n        getSignal : function () {\n            return this._signal;\n        },\n\n        /**\n         * Delete instance properties\n         * @private\n         */\n        _destroy : function () {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n\n    };\n\n\n/*global SignalBinding:false*/\n\n    // Signal --------------------------------------------------------\n    //================================================================\n\n    function validateListener(listener, fnName) {\n        if (typeof listener !== 'function') {\n            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n        }\n    }\n\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */\n    function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */\n        this._bindings = [];\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n\n    Signal.prototype = {\n\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */\n        VERSION : '1.0.0',\n\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */\n        memorize : false,\n\n        /**\n         * @type boolean\n         * @private\n         */\n        _shouldPropagate : true,\n\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */\n        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\n            var prevIndex = this._indexOfListener(listener, listenerContext),\n                binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) {\n                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n                }\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if(this.memorize && this._prevParams){\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */\n        _addBinding : function (binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */\n        _indexOfListener : function (listener, context) {\n            var n = this._bindings.length,\n                cur;\n            while (n--) {\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n            return -1;\n        },\n\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */\n        has : function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        add : function (listener, listenerContext, priority) {\n            validateListener(listener, 'add');\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        addOnce : function (listener, listenerContext, priority) {\n            validateListener(listener, 'addOnce');\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */\n        remove : function (listener, context) {\n            validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n\n        /**\n         * Remove all listeners from the Signal.\n         */\n        removeAll : function () {\n            var n = this._bindings.length;\n            while (n--) {\n                this._bindings[n]._destroy();\n            }\n            this._bindings.length = 0;\n        },\n\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */\n        getNumListeners : function () {\n            return this._bindings.length;\n        },\n\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */\n        halt : function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */\n        dispatch : function (params) {\n            if (! this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments),\n                n = this._bindings.length,\n                bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (! n) {\n                //should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */\n        forget : function(){\n            this._prevParams = null;\n        },\n\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */\n        dispose : function () {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n\n    // Namespace -----------------------------------------------------\n    //================================================================\n\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */\n    var signals = Signal;\n\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */\n    // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n\n\n\n    //exports to multiple environments\n    if(typeof define === 'function' && define.amd){ //AMD\n        define(function () { return signals; });\n    } else if (typeof module !== 'undefined' && module.exports){ //node\n        module.exports = signals;\n    } else { //browser\n        //use string because of Google closure compiler ADVANCED_MODE\n        /*jslint sub:true */\n        global['signals'] = signals;\n    }\n\n}(this));\n","export class Point {\r\n    \r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        //this.x = Math.round(x);\r\n        //this.y = Math.round(y);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    findDist(next: Point): number {\r\n        const dist = Math.sqrt((this.x-next.x)*(this.x-next.x)+(this.y-next.y)*(this.y-next.y));\r\n        return dist;\r\n    }\r\n\r\n\r\n    findDistX(next: Point): number {\r\n        const dist = Math.abs(this.x-next.x);\r\n        return dist;\r\n    }\r\n\r\n}","export class Rectangle {\r\n    \r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n\r\n    constructor(x1: number, y1: number, x2: number, y2: number) {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.updateCoords(x1, y1, x2, y2);\r\n    }\r\n\r\n    get width(): number {\r\n        return Math.abs(this.x1-this.x2)\r\n    }\r\n\r\n    get height(): number {\r\n        return Math.abs(this.y1-this.y2)\r\n    }\r\n\r\n    get zeroX(): number {\r\n        return this.x1\r\n    }\r\n\r\n    get zeroY(): number {\r\n        return this.y2\r\n    }\r\n\r\n    get midX(): number {\r\n        return this.x1 + Math.abs(this.x2 - this.x1)*0.5;\r\n    }\r\n\r\n    get midY(): number {\r\n        return this.y1 + Math.abs(this.y2 - this.y1)*0.5;\r\n    }\r\n\r\n    updateCoords(x1: number, y1: number, x2: number, y2: number) {\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n    }\r\n\r\n// @ts-ignore\r\n    countDistBetweenRects(type: string, next: Rectangle) : number {\r\n        switch (type) {\r\n            case 'vertical':\r\n                return this.y1 - next.y2\r\n            break;\r\n\r\n            case 'horizontal':\r\n                return this.x1 - next.x2\r\n            break;\r\n        }\r\n        \r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.x1 = this.x1 + dx;\r\n        this.y1 = this.y1 + dy;\r\n        this.x2 = this.x2 + dx;\r\n        this.y2 = this.y2 + dy;\r\n    }\r\n\r\n}\r\n","//\n//\n// Based on: http://www.html5rocks.com/en/tutorials/canvas/hidpi/\n\n//\nvar scaleFn = function(canvas, context, customWidth, customHeight) {\n  if(!canvas || !context) { throw new Error('Must pass in `canvas` and `context`.'); }\n\n  var width = customWidth ||\n              canvas.width || // attr, eg: <canvas width='400'>\n              canvas.clientWidth; // keep existing width\n  var height = customHeight ||\n               canvas.height ||\n               canvas.clientHeight;\n  var deviceRatio = window.devicePixelRatio || 1;\n  var bsRatio = context.webkitBackingStorePixelRatio ||\n                context.mozBackingStorePixelRatio ||\n                context.msBackingStorePixelRatio ||\n                context.oBackingStorePixelRatio ||\n                context.backingStorePixelRatio || 1;\n  var ratio = deviceRatio / bsRatio;\n\n  // Adjust canvas if ratio =/= 1\n  if (deviceRatio !== bsRatio) {\n    canvas.width = Math.round(width * ratio);\n    canvas.height = Math.round(height * ratio);\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    context.scale(ratio, ratio);\n  }\n  return ratio;\n};\n\n// expose functionality\nif(typeof window !== 'undefined') { window.canvasDpiScaler = scaleFn; }\nmodule.exports = scaleFn;\n","import { Signal } from \"signals\"\r\nimport { Point } from \"./Point\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n\r\nconst canvasDpiScaler = require('canvas-dpi-scaler');\r\n\r\nexport class Canvas {\r\n\r\n    container: HTMLElement;\r\n    canvas: HTMLCanvasElement;\r\n    _ctx: CanvasRenderingContext2D | null;\r\n    // @ts-ignore\r\n    height: number;\r\n    // @ts-ignore\r\n    width: number;\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    left: number;\r\n    // @ts-ignore\r\n    mouseCoords: Point;\r\n    resized: Signal;\r\n    onPaddingsSetted: Signal;\r\n    mouseMoved: Signal;\r\n    mouseOuted: Signal;\r\n    touchEnded: Signal;\r\n    isSquare: boolean = false;\r\n    lineWidth: number = 1;\r\n    color: string = 'black'\r\n\r\n    constructor(container: HTMLElement, ...paddings: number[]) {\r\n        this.onPaddingsSetted = new Signal();\r\n        this.mouseMoved = new Signal();\r\n        this.mouseOuted = new Signal();\r\n        this.touchEnded = new Signal();\r\n\r\n        this.resized = new Signal();\r\n\r\n        this.container = container;\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.top = 0;\r\n        this.right = 0;\r\n        this.bottom = 0;\r\n        this.left = 0;\r\n\r\n        this.container.appendChild(this.canvas);\r\n        this._ctx = this.canvas.getContext('2d');\r\n        \r\n        //bind\r\n        this.clear = this.clear.bind(this);\r\n\r\n        //listeners\r\n        window.addEventListener('resize', () => { this.resize() });\r\n\r\n        //call methods\r\n        this.setPaddings(...paddings);\r\n        this.resize();\r\n    }\r\n\r\n\r\n    turnOnListenres() {\r\n        this.canvas.addEventListener('mousemove', (event) => {\r\n            this.mouseCoords = this.getMouseCoords(event);\r\n            if (this.inDrawArea) {\r\n                this.mouseMoved.dispatch();\r\n            } else {\r\n                this.mouseCoords = new Point(this.viewport.x2, this.viewport.zeroY);\r\n                this.mouseOuted.dispatch();\r\n            }\r\n          });\r\n\r\n        this.canvas.addEventListener('mouseleave', (event) => {\r\n            this.mouseCoords = new Point(this.viewport.x2, this.viewport.zeroY);\r\n            this.mouseOuted.dispatch();\r\n        });\r\n\r\n        this.canvas.addEventListener('touchmove', (event) => {\r\n            this.mouseCoords = this.getTouchCoords(event);\r\n            if (this.inDrawArea) {\r\n                this.mouseMoved.dispatch();\r\n            } else {\r\n                this.mouseCoords = new Point(this.viewport.x2, this.viewport.zeroY);\r\n                this.mouseOuted.dispatch();\r\n            }\r\n        });\r\n\r\n        this.canvas.addEventListener('touchend', (event) => {\r\n            this.mouseCoords = new Point(this.viewport.x2, this.viewport.zeroY);\r\n            this.touchEnded.dispatch();\r\n        });\r\n\r\n        this.mouseCoords = new Point(this.viewport.x2, this.viewport.zeroY); \r\n    }\r\n\r\n    addOnPage() {\r\n        this.container.appendChild(this.canvas);\r\n    }\r\n\r\n    get inDrawArea(): boolean {\r\n        if (this.mouseCoords.x < 0) return false;\r\n        if (this.mouseCoords.x > this.viewport.width) return false;\r\n        if (this.mouseCoords.y < 0) return false;\r\n        if (this.mouseCoords.y > this.viewport.height) return false;\r\n        return true;\r\n    }\r\n\r\n    setPaddings(...paddings: number[]) {\r\n        let fields = {};\r\n        const defaultPad: number = 50;\r\n\r\n        switch(paddings.length) {\r\n            case 0:\r\n                this.top = defaultPad;\r\n                this.right = defaultPad;\r\n                this.bottom = defaultPad;\r\n                this.left = defaultPad;\r\n            break;\r\n          \r\n            case 1:\r\n                this.top = paddings[0];\r\n                this.right = defaultPad;\r\n                this.bottom = defaultPad;\r\n                this.left = defaultPad;\r\n            break;\r\n          \r\n            case 2:\r\n                this.top = paddings[0];\r\n                this.right = paddings[1];\r\n                this.bottom = paddings[0];\r\n                this.left = paddings[1];\r\n            break;\r\n\r\n            case 3:\r\n                this.top = paddings[0];\r\n                this.right = paddings[1];\r\n                this.bottom = paddings[2];\r\n                this.left = defaultPad;\r\n            break;\r\n\r\n            case 4:\r\n                this.top = paddings[0];\r\n                this.right = paddings[1];\r\n                this.bottom = paddings[2];\r\n                this.left = paddings[3];\r\n            break;\r\n          }\r\n        \r\n        this.mouseCoords = new Point(this.viewport.x2, this.viewport.zeroY);\r\n        this.onPaddingsSetted.dispatch();\r\n        return \r\n    }\r\n\r\n\r\n    get ctx(): CanvasRenderingContext2D | null {\r\n        return this._ctx;\r\n    }\r\n\r\n    set squareRes(res: boolean) {\r\n        this.isSquare = res;\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n\r\n        if (this.isSquare) {\r\n            let w = this.container.getBoundingClientRect().width;\r\n            let h = this.container.getBoundingClientRect().height;\r\n            this.width = Math.min(w, h);\r\n            this.height = Math.min(w, h);\r\n        }\r\n        else {\r\n            this.width = this.container.getBoundingClientRect().width;\r\n            this.height = this.container.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n        this.canvas.style.width = this.width.toString() + 'px';\r\n        this.canvas.style.height = this.height.toString() + 'px';\r\n        canvasDpiScaler(this.canvas, this._ctx, this.width, this.height);\r\n\r\n        this.resized.dispatch();\r\n    }\r\n\r\n    clear() {\r\n        if (this._ctx) this._ctx.clearRect(0, 0, this.width, this.height);\r\n       \r\n    }\r\n\r\n    get viewport(): Rectangle {\r\n        return new Rectangle(this.left, this.top, this.width-this.right, this.height-this.bottom);\r\n    }\r\n\r\n    drawVp() {\r\n        const rect = this.viewport;\r\n        // @ts-ignore\r\n        this.ctx.rect(rect.x1, rect.y1, rect.width, rect.height);\r\n        \r\n        if (this.ctx) {\r\n            this.ctx.strokeStyle = this.color;\r\n            this.ctx.fillStyle = this.color;\r\n            this.ctx.lineWidth = this.lineWidth;\r\n        }\r\n\r\n        // @ts-ignore\r\n        this.ctx.stroke();\r\n    }\r\n\r\n    // @ts-ignore\r\n    getMouseCoords(event): Point {\r\n        var bcr = this.canvas.getBoundingClientRect();\r\n        return new Point(event.clientX - bcr.left  - this.viewport.x1, event.clientY - bcr.top - this.viewport.y1);\r\n    }\r\n\r\n    // @ts-ignore\r\n    getTouchCoords(event): Point {\r\n        const clientX = event.touches[0].clientX;\r\n        const clientY = event.touches[0].clientY;\r\n        var bcr = this.canvas.getBoundingClientRect();\r\n        return new Point(clientX - bcr.left - this.viewport.x1, clientY - bcr.top - this.viewport.y1);\r\n    }\r\n\r\n    clipCanvas() {\r\n        const rect = this.viewport;\r\n        let squarePath = new Path2D();\r\n        squarePath.rect( rect.x1, rect.y1, rect.width, rect.height );\r\n        // @ts-ignore\r\n        this._ctx.clip(squarePath);\r\n    }\r\n\r\n  }\r\n","import { Series } from \"./Series\";\r\n\r\nexport class Data {\r\n\r\n    seriesStorage: Series[];\r\n    \r\n    constructor() {\r\n        this.seriesStorage = [];\r\n    }\r\n\r\n    findExtremes(type: string, from?: number, to?: number): number[] {\r\n        let maxArr: number[] = [];\r\n        let minArr: number[] = [];\r\n\r\n        \r\n        this.seriesStorage.forEach((series) => {\r\n            let dataRange:  number[][];\r\n            if ((from !== undefined) && (to !== undefined)) { \r\n                    dataRange = series.getDataRange(type, from, to) \r\n                } else { dataRange = series.seriesData }\r\n\r\n            const extremes = series.findExtremes(dataRange);\r\n            switch (type) {\r\n                case 'ind':\r\n                    minArr.push(extremes[2]);\r\n                    maxArr.push(extremes[3]);\r\n                break;\r\n    \r\n                case 'val':\r\n                    minArr.push(extremes[0]);\r\n                    maxArr.push(extremes[1]);\r\n                break;\r\n            }\r\n        })\r\n\r\n        return [Math.min(...minArr), Math.max(...maxArr)];\r\n    }\r\n\r\n    findSeriesById(id: string):Series | null {\r\n        const series: Series[] = this.seriesStorage.filter((series) => {\r\n            return series.id === id\r\n        });\r\n        if (series.length !== 0) return series[0];\r\n        return null;\r\n    }\r\n\r\n    switchAllSeriesAnimation(hasAnimation: boolean, duration?: number) {\r\n        this.seriesStorage.forEach((series, ind) => {\r\n            series.hasAnimation = hasAnimation;\r\n            if (duration) series.animationDuration = duration;\r\n        })\r\n    }\r\n\r\n    changeAllSeriesAnimationTimeFunction(newTimeFunc:(time: number) => number) {\r\n        this.seriesStorage.forEach((series, ind) => {\r\n            series.timeFunc = newTimeFunc;\r\n        })\r\n    }\r\n\r\n/*\r\n    addSeries(id: string, ...seriesData: number[][]) {\r\n        const newSeries = new Series(id, ...seriesData);\r\n        this.storage.push(newSeries);\r\n        this.onSeriesAdded.dispatch();\r\n        newSeries.onDataReplaced.add(this.onDataReplaced.dispatch);\r\n        newSeries.onPlotDataChanged.add( this.onPlotDataAnimated.dispatch );\r\n        return newSeries;\r\n    }\r\n\r\n    removeSeries(id: string) {\r\n        const series: Series[] = this.storage.filter((series) => {\r\n            return series.id !== id\r\n        });\r\n        this.storage = series.slice();   \r\n    }\r\n\r\n*/\r\n\r\n  }","import { Point } from \"./Point\";\r\nimport { Signal } from \"signals\"\r\nimport { Rectangle } from \"./Rectangle\";\r\n\r\ninterface labelOutline {\r\n    width: number;\r\n    color: string;\r\n}\r\n\r\nexport class Label {\r\n    display: boolean = true;\r\n\r\n    color: string = 'black';\r\n    colorArr?: string[];\r\n    color_counter: number = 0;\r\n    font: string = '16px serif';\r\n    fontSize: number = 16;\r\n    position: string = 'bottom';\r\n    offset: number = 0;\r\n    units?: string;\r\n    rotationAngle: number = 0;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    isUpperCase: boolean = false;\r\n\r\n    hasOutline: boolean = false;\r\n    outlineOptions?: labelOutline;\r\n\r\n    onOptionsSetted: Signal;\r\n\r\n    constructor(type?: string) {\r\n\r\n        this.onOptionsSetted = new Signal();\r\n\r\n        switch (type) {\r\n            case 'vertical':\r\n                this.position = 'left';\r\n                break;\r\n\r\n            case 'horizontal':\r\n                this.position = 'bottom';\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    setOptions(display: boolean, color?: string, position?: string, offset?: number, fontOptions?: string[], colorArr?: string[]) {\r\n        this.color = color || 'black';\r\n        this.position = position || 'bottom';\r\n        this.offset = offset || 0;\r\n\r\n        this.display = display;\r\n\r\n        if (colorArr) {\r\n            this.colorArr = colorArr;\r\n            this.color_counter = 0;\r\n        }\r\n\r\n        if (fontOptions) {\r\n            this.font = `${fontOptions[0]}px ${fontOptions[1]}`;\r\n            this.fontSize = +fontOptions[0];\r\n        }\r\n\r\n        this.onOptionsSetted.dispatch();\r\n        return this;\r\n    }\r\n\r\n    setOutline(options: labelOutline) {\r\n        this.hasOutline = true;\r\n        this.outlineOptions = options;\r\n    }\r\n\r\n    setOffset(x: number, y: number) {\r\n        this.offsetX = x;\r\n        this.offsetY = y;\r\n        this.onOptionsSetted.dispatch();\r\n    }\r\n\r\n    addOffset(labelCoord: Point) {\r\n\r\n        if (this.offsetX && this.offsetY) {\r\n            labelCoord.y = labelCoord.y - this.offsetY;\r\n            labelCoord.x = labelCoord.x + this.offsetX;\r\n        } else\r\n\r\n            switch (this.position) {\r\n                case 'top':\r\n                    labelCoord.y = labelCoord.y - this.offset - this.fontSize * 0.5;\r\n                    break;\r\n\r\n                case 'bottom':\r\n                    labelCoord.y = labelCoord.y + this.offset + this.fontSize * 0.5;\r\n                    break;\r\n\r\n                case 'left':\r\n                    labelCoord.x = labelCoord.x - this.offset;\r\n                    break;\r\n\r\n                case 'right':\r\n                    labelCoord.x = labelCoord.x + this.offset;\r\n                    break;\r\n            }\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, coord: Point, labeltext: string) {\r\n\r\n        if (this.colorArr) {\r\n            ctx.fillStyle = this.colorArr[this.color_counter];\r\n            this.color_counter = this.color_counter + 1;\r\n            if (this.color_counter == this.colorArr.length) this.color_counter = 0;\r\n        }\r\n\r\n        else {\r\n            ctx.fillStyle = this.color;\r\n        }\r\n\r\n        ctx.font = this.font;\r\n        ctx.textBaseline = 'middle';\r\n        \r\n        if ((this.isUpperCase) && (typeof labeltext == 'string')) {\r\n            labeltext = labeltext.toUpperCase();\r\n        }\r\n\r\n        const text = ctx.measureText(labeltext);\r\n        const labelCoord = new Point(coord.x - text.width * 0.5, coord.y);\r\n        this.addOffset(labelCoord);\r\n\r\n\r\n        let printText = labeltext;\r\n        if (this.units) printText = labeltext + this.units;\r\n\r\n        if (this.rotationAngle !== 0) {\r\n            ctx.save();\r\n            ctx.translate(labelCoord.x + text.width * 0.5, labelCoord.y + this.fontSize * 0.5);\r\n            ctx.rotate((Math.PI / 180) * this.rotationAngle);\r\n            ctx.translate(-labelCoord.x - text.width * 0.5, -labelCoord.y - this.fontSize * 0.5);\r\n            ctx.fillText(printText, labelCoord.x, labelCoord.y);\r\n\r\n            ctx.restore();\r\n        } else {\r\n\r\n            if (this.hasOutline) {\r\n                this.drawOutline(ctx, labelCoord, printText);\r\n            }\r\n\r\n            ctx.fillText(printText, labelCoord.x, labelCoord.y);\r\n        }\r\n\r\n    }\r\n\r\n    drawOutline(ctx: CanvasRenderingContext2D, coord: Point, text: string) {\r\n        \r\n        if (this.outlineOptions) {   \r\n            ctx.lineWidth = this.outlineOptions.width;     \r\n            ctx.strokeStyle = this.outlineOptions.color;\r\n            ctx.strokeText(text, coord.x, coord.y);\r\n        }\r\n\r\n    }\r\n\r\n    getlabelRect(ctx: CanvasRenderingContext2D, coord: Point, labeltext: string): Rectangle {\r\n        ctx.font = this.font;\r\n        const text = ctx.measureText(labeltext);\r\n\r\n        const labelCoord = new Point(coord.x - text.width * 0.5, coord.y);\r\n        this.addOffset(labelCoord);\r\n        let textYgap = 0;\r\n\r\n        if (this.font.indexOf('Transcript Pro') !== -1) {\r\n            textYgap = 2;\r\n        }\r\n\r\n        const labelRect = new Rectangle(labelCoord.x, labelCoord.y - this.fontSize * 0.5, labelCoord.x + text.width, labelCoord.y + this.fontSize * 0.5 - textYgap);\r\n        return labelRect;\r\n    }\r\n\r\n\r\n}","import { Rectangle } from \"./Rectangle\";\r\nimport { Point } from \"./Point\";\r\nimport { Label } from \"./Label\";\r\n\r\ninterface tooltipOptions {\r\n    lineWidth: number;\r\n    lineColor: string;\r\n    brushColor: string;\r\n    mainSize: number;\r\n    lineDash: number[];\r\n}\r\n\r\n//описание класса\r\n\r\nexport class Tooltip {\r\n\r\n    _id: string;\r\n    type: string;\r\n    _options: tooltipOptions;\r\n    labels?: any[];\r\n    label: Label;\r\n\r\n    constructor(id: string, type: string, ...options: any) {\r\n        this._id = id;\r\n        this.type = type;\r\n\r\n        this._options = {\r\n            lineWidth: 1,\r\n            lineColor: '#000000',\r\n            brushColor: '#000000',\r\n            mainSize: 2,\r\n            lineDash: [],\r\n        };\r\n\r\n        this.label = new Label();\r\n\r\n        //if (labels) this.labels = labels;\r\n\r\n        this.setOptions(options);\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    setOptions(options: any[]) {\r\n        switch (this.type) {\r\n            case 'circle_series':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this._options.mainSize = options[3];\r\n                break;\r\n\r\n            case 'line_vertical_full':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.lineDash = options[2];\r\n                break;\r\n\r\n            case 'line_horizontal_end':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.lineDash = options[2];\r\n                break;\r\n\r\n            case 'label_x_start':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this._options.mainSize = options[3];\r\n                this.labels = options[4];\r\n                break;\r\n\r\n            case 'circle_y_end':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this._options.mainSize = options[3];\r\n                break;\r\n\r\n            case 'data_y_end':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this._options.mainSize = options[3];\r\n                break;\r\n\r\n            case 'delta_abs':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this._options.mainSize = options[3];\r\n                break;\r\n\r\n            case 'data_label':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this.labels = options[3];\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    drawTooltip(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point, xyData: Point, ind: number, toDraw?: boolean) {\r\n        switch (this.type) {\r\n\r\n            case 'circle_series':\r\n                this.drawCircleSeries(ctx, ttCoord);\r\n                break;\r\n\r\n            case 'line_vertical_full':\r\n                this.drawLineVerticalFull(ctx, vp, ttCoord);\r\n                break;\r\n\r\n            case 'line_horizontal_end':\r\n                this.drawLineHorizontalEnd(ctx, vp, ttCoord);\r\n                break;\r\n\r\n            case 'label_x_start':\r\n                this.drawLabelXStart(ctx, vp, ttCoord, xyData, ind);\r\n                break;\r\n\r\n            case 'circle_y_end':\r\n                this.drawCircleYEnd(ctx, vp, ttCoord);\r\n                break;\r\n\r\n            case 'data_y_end':\r\n                return this.drawDataYEnd(ctx, vp, ttCoord, xyData, toDraw);\r\n\r\n            case 'delta_abs':\r\n                this.drawDeltaAbs(ctx, vp, ttCoord, xyData);\r\n                break;\r\n            \r\n            case 'data_label':\r\n                this.drawDataLabel(ctx, vp, ttCoord, xyData, ind);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    drawDataLabel(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point, seriesData: Point, ind: number) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.fillStyle = this._options.brushColor;\r\n        ctx.setLineDash(this._options.lineDash);\r\n\r\n        const labelCoord = new Point(ttCoord.x, ttCoord.y);\r\n\r\n        //параметры начальные\r\n        this.label.position = 'top';\r\n        const lineX = ttCoord.x;\r\n\r\n        const rectPadding = 6;\r\n\r\n        // @ts-ignore\r\n        const labelText = this.labels[ind] + '; x: ' + (seriesData.x).toFixed(1) + '; y: '+ (seriesData.y).toFixed(1);\r\n        const cornersRadius = this._options.mainSize;\r\n\r\n        let labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n\r\n        let roundRect: Rectangle = new Rectangle(labelRect.x1 - rectPadding,\r\n            labelRect.y1 - rectPadding,\r\n            labelRect.x2 + rectPadding,\r\n            labelRect.y2 + rectPadding);\r\n        \r\n/*\r\n        if (roundRect.x2 > vp.x2) {\r\n            labelCoord.x = labelCoord.x - roundRect.x2 + vp.x2;\r\n            roundRect.move(- roundRect.x2 + vp.x2, 0)\r\n        }\r\n*/\r\n\r\n        if (roundRect.x2 > vp.x2) {\r\n            labelCoord.x = labelCoord.x - Math.abs(roundRect.x2 - vp.x2) - rectPadding;\r\n\r\n            labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n\r\n            roundRect = new Rectangle(labelRect.x1 - rectPadding,\r\n                labelRect.y1 - rectPadding,\r\n                labelRect.x2 + rectPadding,\r\n                labelRect.y2 + rectPadding);\r\n        }\r\n\r\n        if (roundRect.x1 < vp.x1) {\r\n            labelCoord.x = labelCoord.x + Math.abs(roundRect.x1 - vp.x1) + rectPadding;\r\n            \r\n            labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n\r\n            roundRect = new Rectangle(labelRect.x1 - rectPadding,\r\n                labelRect.y1 - rectPadding,\r\n                labelRect.x2 + rectPadding,\r\n                labelRect.y2 + rectPadding);\r\n        }\r\n\r\n\r\n        if (roundRect.y1 < vp.y1) {\r\n            this.label.position = 'bottom';\r\n            labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n\r\n            roundRect = new Rectangle(labelRect.x1 - rectPadding,\r\n                labelRect.y1 - rectPadding,\r\n                labelRect.x2 + rectPadding,\r\n                labelRect.y2 + rectPadding);\r\n\r\n            //labelCoord.y = labelCoord.y + vp.y1 - roundRect.y1;\r\n            //roundRect.move(0, vp.y1 - roundRect.y1);\r\n\r\n        }\r\n\r\n        this.roundRect(ctx, roundRect.x1, roundRect.y1, roundRect.width, roundRect.height, cornersRadius);\r\n\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        this.label.draw(ctx, labelCoord, labelText);\r\n    }\r\n\r\n\r\n    drawCircleSeries(ctx: CanvasRenderingContext2D, ttCoord: Point) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.fillStyle = this._options.brushColor;\r\n        ctx.setLineDash(this._options.lineDash);\r\n        ctx.beginPath();\r\n        ctx.arc(ttCoord.x, ttCoord.y, this._options.mainSize, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n\r\n    drawLineVerticalFull(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.setLineDash(this._options.lineDash);\r\n        ctx.beginPath();\r\n        ctx.moveTo(ttCoord.x, vp.y1);\r\n        ctx.lineTo(ttCoord.x, vp.zeroY);\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n    }\r\n\r\n    drawLineHorizontalEnd(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.setLineDash(this._options.lineDash);\r\n        ctx.beginPath();\r\n        ctx.moveTo(ttCoord.x, ttCoord.y);\r\n        ctx.lineTo(vp.x2, ttCoord.y);\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n    }\r\n\r\n\r\n    drawLabelXStart(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point, seriesData: Point, ind: number) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.fillStyle = this._options.brushColor;\r\n        ctx.setLineDash(this._options.lineDash);\r\n\r\n        // параметры\r\n        const rectPadding = 6;\r\n        const rectWidth = 60;\r\n\r\n        // @ts-ignore\r\n        const labelText = (this.labels[ind]).toLocaleDateString('en');\r\n        const cornersRadius = this._options.mainSize;\r\n\r\n        const labelCoord = new Point(ttCoord.x, vp.zeroY);\r\n        const labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n\r\n\r\n        let labelCenter = new Point(labelCoord.x, labelRect.y1 + labelRect.height * 0.5);\r\n\r\n        let roundRect: Rectangle = new Rectangle(\r\n            labelCenter.x - rectWidth * 0.5,\r\n            labelCenter.y - rectPadding - labelRect.height * 0.5,\r\n            labelCenter.x + rectWidth * 0.5,\r\n            labelCenter.y + rectPadding + labelRect.height * 0.5\r\n        );\r\n\r\n\r\n        if (roundRect.x1 < vp.x1) {\r\n            labelCoord.x = labelCoord.x + vp.x1 - roundRect.x1;\r\n            roundRect.move(0, vp.x1 - roundRect.x1);\r\n        }\r\n\r\n        if (roundRect.x2 > vp.x2) {\r\n            labelCoord.x = labelCoord.x - (roundRect.x2 - vp.x2);\r\n            roundRect.move(0, -roundRect.x2 + vp.x2);\r\n        }\r\n\r\n        labelCenter = new Point(labelCoord.x, labelRect.y1 + labelRect.height * 0.5);\r\n\r\n        roundRect = new Rectangle(\r\n            labelCenter.x - rectWidth * 0.5,\r\n            labelCenter.y - rectPadding - labelRect.height * 0.5,\r\n            labelCenter.x + rectWidth * 0.5,\r\n            labelCenter.y + rectPadding + labelRect.height * 0.5\r\n        );\r\n\r\n\r\n        this.roundRect(ctx, roundRect.x1, roundRect.y1, roundRect.width, roundRect.height, cornersRadius);\r\n\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        this.label.draw(ctx, labelCoord, labelText);\r\n\r\n        return roundRect\r\n    }\r\n\r\n    roundRect(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n\r\n    }\r\n\r\n    drawCircleYEnd(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.fillStyle = this._options.brushColor;\r\n        ctx.setLineDash(this._options.lineDash);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(vp.x2, ttCoord.y, this._options.mainSize, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n\r\n\r\n    drawDataYEnd(ctx: CanvasRenderingContext2D, vp: Rectangle, start_ttCoord: Point, seriesData: Point, toDraw?: boolean): Rectangle {\r\n        const ttCoord = new Point(start_ttCoord.x, start_ttCoord.y);\r\n\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.fillStyle = this._options.brushColor;\r\n        ctx.setLineDash(this._options.lineDash);\r\n\r\n        // параметры\r\n\r\n        const rectPadding = 6;\r\n        const labelText = (seriesData.y).toFixed(1) + '%';\r\n        const cornersRadius = this._options.mainSize;\r\n\r\n        this.label.position = 'right'\r\n\r\n        const labelCoord = new Point(vp.x2, ttCoord.y);\r\n\r\n        const labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n\r\n        let labelStart = new Point(labelRect.x1, labelRect.y1);\r\n        let labelCenter = new Point(labelRect.x1 + labelRect.width*0.5, labelCoord.y);\r\n\r\n        const roundRectWidth = 40;\r\n\r\n        let roundRect: Rectangle = new Rectangle(labelCenter.x - roundRectWidth*0.5,\r\n            labelStart.y - rectPadding,\r\n            labelCenter.x + roundRectWidth*0.5,\r\n            labelStart.y  + labelRect.height + rectPadding);\r\n\r\n        /*\r\n        let roundRect: Rectangle = new Rectangle(vp.x2 + 11 - rectPadding + 3,\r\n            labelStart.y - rectPadding,\r\n            vp.x2 + rectPadding + 35 + 3,\r\n            labelStart.y  + labelRect.height + rectPadding);\r\n        */\r\n        \r\n\r\n        if (roundRect.y1 < vp.y1) {\r\n            labelCoord.y = labelCoord.y + vp.y1 - roundRect.y1;\r\n            ttCoord.y = labelCoord.y;\r\n            roundRect.move(0, vp.y1 - roundRect.y1);\r\n        }\r\n\r\n        if (roundRect.y2 > vp.y2) {\r\n            labelCoord.y = labelCoord.y - (roundRect.y2 - vp.y2);\r\n            ttCoord.y = labelCoord.y;\r\n            roundRect.move(0, -roundRect.y2 + vp.y2);\r\n        }\r\n\r\n        this.roundRect(ctx, roundRect.x1, roundRect.y1, roundRect.width, roundRect.height, cornersRadius);\r\n\r\n        //labelCoord.x = roundRect.x1+roundRect.width*0.5-labelRect.width*0.5-this.label.offset;\r\n\r\n        if (toDraw) {\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            this.label.draw(ctx, labelCoord, labelText);\r\n        }\r\n\r\n        //console.log(labelCoord, labelText);\r\n        return roundRect\r\n    }\r\n\r\n\r\n    drawDeltaAbs(ctx: CanvasRenderingContext2D, vp: Rectangle, ttCoord: Point, seriesData: Point) {\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.fillStyle = this._options.brushColor;\r\n        ctx.setLineDash(this._options.lineDash);\r\n\r\n        const labelCoord = new Point(ttCoord.x, ttCoord.y);\r\n\r\n        //параметры начальные\r\n        this.label.position = 'right';\r\n    \r\n        const lineX = ttCoord.x;\r\n        labelCoord.y = labelCoord.y - 25;\r\n        const rectPadding = 6;\r\n        const labelText = 'Δ ' + (seriesData.y).toFixed(1) + 'pp';\r\n        const cornersRadius = this._options.mainSize;\r\n\r\n        let labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n        let labelStart = new Point(labelRect.x1, labelRect.y1);\r\n\r\n        let labelCenter = new Point(labelRect.x1 + labelRect.width*0.5, labelCoord.y);\r\n\r\n        const roundRectWidth = 52;\r\n\r\n        let roundRect: Rectangle = new Rectangle(labelCenter.x - roundRectWidth*0.5,\r\n            labelStart.y - rectPadding,\r\n            labelCenter.x + roundRectWidth*0.5,\r\n            labelStart.y  + labelRect.height + rectPadding);\r\n\r\n        /*\r\n        let roundRect: Rectangle = new Rectangle(labelStart.x - rectPadding,\r\n            labelStart.y - rectPadding,\r\n            labelStart.x - rectPadding + labelRect.width + 2 * rectPadding,\r\n            labelStart.y - rectPadding + labelRect.height + 2 * rectPadding);\r\n        */\r\n\r\n        if (roundRect.x2 > vp.x2) {\r\n            labelCoord.x = labelCoord.x - roundRect.x2 + vp.x2;\r\n            roundRect.move(- roundRect.x2 + vp.x2, 0)\r\n        }\r\n\r\n        if (roundRect.x1 < lineX) {\r\n            labelCoord.x = lineX;\r\n            this.label.position = 'left';\r\n            labelRect = this.label.getlabelRect(ctx, labelCoord, labelText);\r\n            labelStart = new Point(labelRect.x2, labelRect.y1);\r\n\r\n            roundRect = new Rectangle(labelStart.x - labelRect.width - rectPadding,\r\n                labelStart.y - rectPadding,\r\n                labelStart.x + rectPadding,\r\n                labelStart.y + labelRect.height + rectPadding);\r\n        }\r\n\r\n        if (roundRect.y1 < vp.y1) {\r\n            labelCoord.y = labelCoord.y + vp.y1 - roundRect.y1;\r\n            roundRect.move(0, vp.y1 - roundRect.y1);\r\n        }\r\n\r\n        this.roundRect(ctx, roundRect.x1, roundRect.y1, roundRect.width, roundRect.height, cornersRadius);\r\n\r\n        ctx.fill();\r\n        ctx.stroke();\r\n\r\n        this.label.draw(ctx, labelCoord, labelText);\r\n    }\r\n\r\n}","import { Point } from \"./Point\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { Tooltip } from \"./Tooltip\";\r\nimport { Label } from \"./Label\";\r\n\r\ninterface plotOptions {\r\n    lineWidth: number;\r\n    lineColor: string;\r\n    lineDash: number[];\r\n    brushColor: string;\r\n    mainSize: number;\r\n    fontSize: number;\r\n    char: string;\r\n\r\n}\r\n\r\n//описание класса\r\n\r\nexport class Plot {\r\n\r\n    _id: string;\r\n    type: string;\r\n    _options: plotOptions;\r\n    tooltips: Tooltip[];\r\n    label: Label;\r\n\r\n    constructor(id: string, type: string, ...options: any) {\r\n\r\n        this._id = id;\r\n        this.type = type;\r\n\r\n        this._options = {\r\n            lineWidth: 0.5,\r\n            lineColor: '#000000',\r\n            brushColor: '#000000',\r\n            mainSize: 1,\r\n            fontSize: 10,\r\n            char: '1',\r\n            lineDash: [],\r\n        };\r\n\r\n        this.setOptions(options);\r\n        this.tooltips = [];\r\n\r\n        this.label = new Label(this.type);\r\n        return this;\r\n    }\r\n\r\n\r\n    setOptions(options: any[]) {\r\n\r\n        switch (this.type) {\r\n            case 'dotted':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                this._options.mainSize = options[3];\r\n                break;\r\n\r\n            case 'line':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.lineDash = options[2];\r\n                break;\r\n\r\n            case 'area':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                break;\r\n\r\n            case 'area_bottom':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                this._options.brushColor = options[2];\r\n                break;\r\n\r\n            case 'unicode':\r\n                this._options.fontSize = options[0];\r\n                this._options.brushColor = options[1];\r\n                this._options.char = options[2];\r\n                break;\r\n\r\n            case 'text':\r\n                this._options.lineWidth = options[0];\r\n                this._options.lineColor = options[1];\r\n                break;\r\n        }\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n\r\n\r\n    drawPlot(ctx: CanvasRenderingContext2D, plotData: Point[], vp: Rectangle, labels: string[], highlighted?: boolean) {\r\n\r\n        ctx.strokeStyle = this._options.lineColor;\r\n        ctx.lineWidth = this._options.lineWidth;\r\n        ctx.globalAlpha = 1;\r\n        ctx.fillStyle = this._options.brushColor;\r\n\r\n        switch (this.type) {\r\n            case 'dotted':\r\n                this.drawDotted(ctx, plotData);\r\n                break;\r\n\r\n            case 'line':\r\n                this.drawLine(ctx, plotData);\r\n                break;\r\n\r\n            case 'area':\r\n                this.drawArea(ctx, plotData, vp);\r\n                break;\r\n\r\n            case 'area_bottom':\r\n                this.drawArea(ctx, plotData, vp);\r\n                break;\r\n\r\n            case 'unicode':\r\n                this.drawUnicode(ctx, plotData, highlighted);\r\n                break;\r\n\r\n            case 'text':\r\n                this.drawText(ctx, plotData, labels);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    drawDotted(ctx: CanvasRenderingContext2D, plotData: Point[]) {\r\n\r\n        for (let i = 0; i < plotData.length; i++) {\r\n            ctx.beginPath();\r\n            ctx.arc(plotData[i].x, plotData[i].y, this._options.mainSize, 0, Math.PI * 2, true);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    drawUnicode(ctx: CanvasRenderingContext2D, plotData: Point[], highlighted?: boolean) {\r\n        ctx.font = `${this._options.fontSize}px serif`;\r\n        ctx.textBaseline = 'middle';\r\n\r\n        const text = ctx.measureText(this._options.char);\r\n        for (let i = 0; i < plotData.length; i++) {\r\n            ctx.globalAlpha = 1;\r\n            ctx.fillText(this._options.char, plotData[i].x - text.width * 0.5, plotData[i].y);\r\n            if (highlighted) {\r\n                ctx.lineWidth = 7;\r\n                ctx.globalAlpha = 0.3;\r\n                ctx.strokeText(this._options.char, plotData[i].x - text.width * 0.5, plotData[i].y);\r\n                ctx.globalAlpha = 1;\r\n                ctx.fillText(this._options.char, plotData[i].x - text.width * 0.5, plotData[i].y);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    drawText(ctx: CanvasRenderingContext2D, plotData: Point[], labels: string[]) {\r\n\r\n        for (let i = 0; i < plotData.length; i++) {\r\n\r\n            ctx.globalAlpha = 1;\r\n            ctx.beginPath();\r\n            ctx.setLineDash([]);\r\n            ctx.moveTo(plotData[i].x, plotData[i].y - 10);\r\n            ctx.lineTo(plotData[i].x, plotData[i].y - 25)\r\n            ctx.stroke();\r\n            \r\n        }\r\n\r\n        for (let i = 0; i < plotData.length; i++) {\r\n\r\n            let printText = labels[i]\r\n            if (!printText) printText = '';\r\n            let printTextArr = printText.split('\\\\n');\r\n\r\n            printTextArr.forEach((row, ind, mas)=> {\r\n                const coord: Point = new Point(plotData[i].x, plotData[i].y - (mas.length - ind - 1)*this.label.fontSize)\r\n                this.label.draw(ctx, coord, row);\r\n            });\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    drawLine(ctx: CanvasRenderingContext2D, plotData: Point[]) {\r\n\r\n        ctx.setLineDash(this._options.lineDash);\r\n        ctx.beginPath();\r\n        ctx.moveTo(plotData[0].x, plotData[0].y);\r\n\r\n        for (let i = 1; i < plotData.length; i++) {\r\n            ctx.lineTo(plotData[i].x, plotData[i].y)\r\n        }\r\n\r\n        ctx.stroke();\r\n    }\r\n\r\n    drawArea(ctx: CanvasRenderingContext2D, plotData: Point[], vp: Rectangle) {\r\n\r\n        ctx.beginPath();\r\n\r\n        if (this.type == 'area_bottom') {\r\n            ctx.lineTo(vp.x1, vp.zeroY);\r\n        }\r\n\r\n        ctx.lineTo(plotData[0].x, plotData[0].y);\r\n\r\n        for (let i = 1; i < plotData.length; i++) {\r\n            ctx.lineTo(plotData[i].x, plotData[i].y)\r\n        }\r\n\r\n        if (this.type == 'area_bottom') {\r\n            ctx.lineTo(vp.x2, vp.zeroY);\r\n            //ctx.lineTo(vp.x1, vp.zeroY);\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n\r\n\r\n    addTooltip(id: string, type: string, ...options: any): Tooltip {\r\n        const tooltip = new Tooltip(id, type, ...options);\r\n        this.tooltips.push(tooltip);\r\n        return tooltip;\r\n    }\r\n\r\n    findTooltipById(id: string): Tooltip | null {\r\n        const tooltips: Tooltip[] = this.tooltips.filter((tooltip) => {\r\n            return tooltip.id === id\r\n        });\r\n        if (tooltips.length !== 0) return tooltips[0];\r\n        return null;\r\n    }\r\n\r\n}","import { Rectangle } from \"./Rectangle\";\r\nimport { Point } from \"./Point\";\r\n\r\nexport class Transformer {\r\n\r\n    matrix: number[];\r\n\r\n    constructor() {\r\n        this.matrix = [];\r\n    }\r\n\r\n    getPlotRect(axisRect: Rectangle, seriesRect: Rectangle, vp: Rectangle): Rectangle {\r\n        let tx: number = (seriesRect.x1 - axisRect.x1);\r\n        let ty: number = -(seriesRect.y2 - axisRect.y2);\r\n        const scaleX = seriesRect.width / axisRect.width;\r\n        const scaleY = seriesRect.height / axisRect.height;\r\n        tx = Math.round(tx*vp.width/axisRect.width); \r\n        ty = Math.round(ty*vp.height/axisRect.height);\r\n        this.matrix = [scaleX, 0, tx, 0, scaleY, ty]; \r\n        return this.transform(vp);\r\n    }\r\n\r\n\r\n    getVeiwportCoord(fromRect: Rectangle, toRect: Rectangle, point: Point): Point {\r\n        let tx: number = (point.x - fromRect.x1);\r\n        let ty: number = -(point.y - fromRect.y2);\r\n        tx = Math.round(tx*toRect.width/fromRect.width); \r\n        ty = Math.round(ty*toRect.height/fromRect.height);\r\n        this.matrix = [0, 0, tx, 0, 0, ty];\r\n        const coordRect = this.transform(toRect);\r\n        const coord = new Point(coordRect.zeroX, coordRect.zeroY)\r\n        return coord;\r\n    }\r\n\r\n\r\n\r\n    transform(viewport: Rectangle): Rectangle {\r\n\r\n        let matrix: number[] = [1, 0, 0, 0, 1, 0];\r\n\r\n        if (this.matrix) {matrix = this.matrix;}\r\n\r\n        let x1: number;\r\n        let y1: number;\r\n        let x2: number;\r\n        let y2: number;   \r\n    \r\n        x1 = this.transFunc(0, 0, matrix.slice(0,3))+viewport.x1;\r\n        y1 = this.transFunc(0, 0, matrix.slice(3))+viewport.y1;\r\n        x2 = this.transFunc(viewport.width, viewport.height, matrix.slice(0,3))+viewport.x1;\r\n        y2 = this.transFunc(viewport.width, viewport.height, matrix.slice(3))+viewport.y1;\r\n\r\n        return new Rectangle(x1, y1, x2, y2);\r\n    }\r\n\r\n    transFunc(x: number, y: number, coeff: number[]): number {  \r\n        let res:number;\r\n        return res = coeff[0]*x + coeff[1]*y + coeff[2];\r\n    }\r\n\r\n}","import { Signal } from \"signals\"\r\nimport { Point } from \"./Point\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { Label } from \"./Label\";\r\nimport { Transformer } from \"./Transformer\";\r\n\r\n\r\nexport class Ticks {\r\n\r\n    display: boolean = false;\r\n    hasCustomLabels: boolean = false;\r\n    hasAnimation: boolean = false;\r\n    animationDuration: number = 300;\r\n\r\n    timeFunc: (time: number) => number = function (time) {\r\n        return time;\r\n      };\r\n\r\n    label: Label;\r\n\r\n    type: string;\r\n    distributionType: string;\r\n    count: number;\r\n    step: number;\r\n\r\n    coords: Point[];\r\n    values: number[];\r\n    labels: string[];\r\n\r\n    customLabels?: string[];\r\n    customTicksOptions?: any[];\r\n\r\n    // параметры отрисовки тика\r\n    linewidth: number = 2;\r\n    tickSize: number = 5;\r\n    color: string = 'black';\r\n    lineDash: number[] = [];\r\n\r\n    onOptionsSetted: Signal;\r\n    onCustomLabelsAdded: Signal;\r\n    onCoordsChanged: Signal;\r\n\r\n    constructor(axistype: string) {\r\n        this.onOptionsSetted = new Signal();\r\n        this.onCustomLabelsAdded = new Signal();\r\n        this.onCoordsChanged = new Signal();\r\n\r\n        this.coords = [];\r\n        this.values = [];\r\n        this.labels = [];\r\n\r\n        this.type = axistype;\r\n\r\n        this.label = new Label(this.type);\r\n\r\n\r\n        this.distributionType = 'default';\r\n        this.count = 5;\r\n        this.step = 100;\r\n\r\n        this.bindChildSignals();\r\n    }\r\n\r\n    switchAnimation(hasAnimation: boolean, duration?: number) {\r\n        this.hasAnimation = hasAnimation;\r\n        if (duration) this.animationDuration = duration;\r\n    }\r\n\r\n    bindChildSignals() {\r\n\r\n    }\r\n\r\n    setCustomLabels(labels: string[]) {\r\n        this.hasCustomLabels = true;\r\n        this.customLabels = labels;\r\n        this.onCustomLabelsAdded.dispatch();\r\n    }\r\n\r\n    settickDrawOptions(length: number, width: number, color: string, lineDash?: number[]) {\r\n        this.linewidth = width;\r\n        this.tickSize = length;\r\n        this.color = color;\r\n        if (lineDash) this.lineDash = lineDash;\r\n    }\r\n\r\n\r\n    setOptions(display: boolean, distributionType: string, ...options: any[]) {\r\n\r\n        this.display = display;\r\n\r\n        switch (distributionType) {\r\n            case 'default':\r\n                this.distributionType = distributionType;\r\n                this.count = options[0];\r\n                break;\r\n\r\n            case 'fixedCount':\r\n                this.distributionType = distributionType;\r\n                this.count = options[0];\r\n                break;\r\n\r\n            case 'fixedStep':\r\n                this.distributionType = distributionType;\r\n                this.step = options[0];\r\n                break;\r\n\r\n            case 'customDateTicks':\r\n                this.distributionType = distributionType;\r\n                if (options.length !== 0) this.customTicksOptions = options[0];\r\n                break;\r\n\r\n            case 'niceCbhStep':\r\n                this.distributionType = distributionType;\r\n                if (options.length !== 0) this.customTicksOptions = options[0];\r\n                break;\r\n\r\n            case 'midStep':\r\n                this.distributionType = distributionType;\r\n                this.count = options[0];\r\n                break;\r\n\r\n            case 'zero':\r\n                this.distributionType = distributionType;\r\n                break;\r\n\r\n            case 'min':\r\n                this.distributionType = distributionType;\r\n                break;\r\n\r\n\r\n        }\r\n        this.onOptionsSetted.dispatch();\r\n    }\r\n\r\n\r\n    createTicks(min: number, max: number, vp: Rectangle, ctx: CanvasRenderingContext2D, noAnimate?: boolean) {\r\n        let coords = [];\r\n\r\n        switch (this.distributionType) {\r\n            case 'default':\r\n                coords = this.generateFixedCountTicks(min, max, vp);\r\n                break;\r\n\r\n            case 'fixedStep':\r\n                coords = this.generateFixedStepTicks(min, max, vp);\r\n                break;\r\n\r\n            case 'fixedCount':\r\n                coords = this.generateFixedCountTicks(min, max, vp);\r\n                break;\r\n\r\n            case 'customDateTicks':\r\n                coords = this.generateCustomDateTicks(min, max, vp, ctx);\r\n                break;\r\n\r\n            case 'niceCbhStep':\r\n                coords = this.generateNiceCbhTicks(min, max, vp);\r\n                break;\r\n\r\n            case 'midStep':\r\n                coords = this.generateMidStep(min, max, vp);\r\n                break;\r\n\r\n            case 'zero':\r\n                coords = this.generateOneTick(min, max, vp, 0);\r\n                break;\r\n                \r\n            case 'min':\r\n                coords = this.generateOneTick(min, max, vp, min);\r\n                break;\r\n        }\r\n\r\n        //если нужна анимация тиков\r\n        if ((this.hasAnimation) && (!noAnimate)) {\r\n            const from = this.makeFromPointArr(this.coords, coords);\r\n\r\n            if (from.length == 0) {\r\n                this.coords = coords;\r\n                this.onCoordsChanged.dispatch();\r\n                return this;\r\n            }\r\n\r\n            this.coords = from;\r\n            this.onCoordsChanged.dispatch();\r\n            this.tickCoordAnimation(from, coords, this.animationDuration);\r\n\r\n            return this\r\n        }\r\n\r\n        this.coords = coords;\r\n        this.onCoordsChanged.dispatch();\r\n    }\r\n\r\n    generateOneTick(min: number, max: number, vp: Rectangle, value: number) {\r\n        let coords = [];\r\n        this.values = [];\r\n        this.labels = [];\r\n        let rectXY: number[] = [];\r\n        const transformer = new Transformer();\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                rectXY = [0, min, 1, max];\r\n                break;\r\n\r\n            case 'horizontal':\r\n                rectXY = [min, 0, max, 1];\r\n                break;\r\n        }\r\n\r\n        const fromRect = new Rectangle(rectXY[0], rectXY[1], rectXY[2], rectXY[3]);\r\n\r\n        let pointXY: number[] = [];\r\n\r\n        if (this.hasCustomLabels) {\r\n            // @ts-ignore\r\n            this.labels.push(this.customLabels[0]);\r\n        } else {\r\n            this.labels.push(value.toFixed(2).toString());\r\n        }\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                pointXY = [0, value];\r\n                break;\r\n\r\n            case 'horizontal':\r\n                pointXY = [value, 0];\r\n                break;\r\n        }\r\n\r\n        const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n        const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n        coords.push(coordPoint);\r\n        this.values.push(value);\r\n\r\n        return coords;\r\n    }\r\n\r\n    generateMidStep(min: number, max: number, vp: Rectangle) {\r\n        let coords = [];\r\n        this.values = [];\r\n        this.labels = [];\r\n        let stepCoord = 0;\r\n        let rectXY: number[] = [];\r\n        const transformer = new Transformer();\r\n\r\n        let stepValue = Math.abs(max - min) / (this.count);\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                stepCoord = vp.height / this.count;\r\n                rectXY = [0, min, 1, max];\r\n                break;\r\n\r\n            case 'horizontal':\r\n                stepCoord = vp.width / this.count;\r\n                rectXY = [min, 0, max, 1];\r\n                break;\r\n        }\r\n\r\n        const fromRect = new Rectangle(rectXY[0], rectXY[1], rectXY[2], rectXY[3]);\r\n\r\n\r\n        for (let i = 0; i <= this.count - 1; i++) {\r\n\r\n            let pointXY: number[] = [];\r\n\r\n            let value = min + i * stepValue + stepValue * 0.5;\r\n\r\n            if (this.hasCustomLabels) {\r\n                //value = Math.round(value);\r\n                // @ts-ignore\r\n                this.labels.push(this.customLabels[0]);\r\n            } else {\r\n                this.labels.push(value.toFixed(2).toString());\r\n            }\r\n\r\n            switch (this.type) {\r\n                case 'vertical':\r\n                    pointXY = [0, value];\r\n                    break;\r\n\r\n                case 'horizontal':\r\n                    pointXY = [value, 0];\r\n                    break;\r\n            }\r\n\r\n            const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n            const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n            coords.push(coordPoint);\r\n            this.values.push(value);\r\n\r\n        }\r\n\r\n        return coords;\r\n    }\r\n\r\n\r\n    generateFixedCountTicks(min: number, max: number, vp: Rectangle) {\r\n        let coords = [];\r\n        this.values = [];\r\n        this.labels = [];\r\n        let stepCoord = 0;\r\n        let rectXY: number[] = [];\r\n        const transformer = new Transformer();\r\n\r\n        let stepValue = Math.abs(max - min) / this.count;\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                stepCoord = vp.height / this.count;\r\n                rectXY = [0, min, 1, max];\r\n                break;\r\n\r\n            case 'horizontal':\r\n                stepCoord = vp.width / this.count;\r\n                rectXY = [min, 0, max, 1];\r\n                break;\r\n        }\r\n\r\n        const fromRect = new Rectangle(rectXY[0], rectXY[1], rectXY[2], rectXY[3]);\r\n\r\n\r\n        for (let i = 0; i <= this.count; i++) {\r\n\r\n            let pointXY: number[] = [];\r\n\r\n            let value = min + i * stepValue;\r\n\r\n            if (this.hasCustomLabels) {\r\n                value = Math.round(value);\r\n                // @ts-ignore\r\n                this.labels.push(this.customLabels[value]);\r\n            } else {\r\n                this.labels.push(value.toFixed(2).toString());\r\n            }\r\n\r\n            switch (this.type) {\r\n                case 'vertical':\r\n                    pointXY = [0, value];\r\n                    break;\r\n\r\n                case 'horizontal':\r\n                    pointXY = [value, 0];\r\n                    break;\r\n            }\r\n\r\n            const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n            const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n            coords.push(coordPoint);\r\n            this.values.push(value);\r\n\r\n        }\r\n\r\n        return coords;\r\n    }\r\n\r\n\r\n    generateFixedStepTicks(min: number, max: number, vp: Rectangle, step?: number, toFixed?: number) {\r\n        let coords = [];\r\n        this.values = [];\r\n        this.labels = [];\r\n        let rectXY: number[] = [];\r\n\r\n        let tickStep = this.step;\r\n\r\n        if (step) {\r\n            tickStep = step;\r\n        }\r\n\r\n\r\n\r\n        const transformer = new Transformer();\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                rectXY = [0, min, 1, max];\r\n                break;\r\n\r\n            case 'horizontal':\r\n                rectXY = [min, 0, max, 1];\r\n                break;\r\n        }\r\n\r\n        const fromRect = new Rectangle(rectXY[0], rectXY[1], rectXY[2], rectXY[3]);\r\n\r\n        const startValue = 0;\r\n        let curValue = startValue;\r\n\r\n        while (curValue < max) {\r\n            if ((curValue >= min) && (curValue <= max)) {\r\n\r\n\r\n                let pointXY: number[] = [];\r\n                let value = curValue;\r\n\r\n                if (this.hasCustomLabels) {\r\n                    value = Math.round(curValue);\r\n                    // @ts-ignore\r\n                    this.labels.push(this.customLabels[value]);\r\n                } else {\r\n                    if (toFixed !== null) {\r\n                        this.labels.push(value.toFixed(toFixed).toString())\r\n                    } else {\r\n                        this.labels.push(value.toFixed(2).toString());\r\n                    }\r\n                }\r\n\r\n                switch (this.type) {\r\n                    case 'vertical':\r\n                        pointXY = [0, value];\r\n                        break;\r\n\r\n                    case 'horizontal':\r\n                        pointXY = [value, 0];\r\n                        break;\r\n                }\r\n\r\n\r\n                const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n                const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n                coords.push(coordPoint);\r\n                this.values.push(value);\r\n            }\r\n\r\n            curValue = curValue + tickStep;\r\n        }\r\n\r\n        curValue = startValue;\r\n        curValue = curValue - tickStep;\r\n\r\n        while (curValue > min) {\r\n            if ((curValue >= min) && (curValue <= max)) {\r\n\r\n\r\n                let pointXY: number[] = [];\r\n                let value = curValue;\r\n\r\n                if (this.hasCustomLabels) {\r\n                    value = Math.round(curValue);\r\n                    // @ts-ignore\r\n                    this.labels.push(this.customLabels[value]);\r\n                } else {\r\n                    if (toFixed !== null) {\r\n                        this.labels.push(value.toFixed(toFixed).toString())\r\n                    } else {\r\n                        this.labels.push(value.toFixed(2).toString());\r\n                    }\r\n                }\r\n\r\n                switch (this.type) {\r\n                    case 'vertical':\r\n                        pointXY = [0, value];\r\n                        break;\r\n\r\n                    case 'horizontal':\r\n                        pointXY = [value, 0];\r\n                        break;\r\n                }\r\n\r\n\r\n                const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n                const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n                coords.push(coordPoint);\r\n                this.values.push(value);\r\n            }\r\n\r\n            curValue = curValue - tickStep;\r\n        }\r\n\r\n        return coords;\r\n    }\r\n\r\n    generateNiceCbhTicks(min: number, max: number, vp: Rectangle) {\r\n        let coords = [];\r\n\r\n        let deviation = Math.abs(max - min);\r\n        let devInd = 0;\r\n\r\n        // @ts-ignore\r\n        for (let j = 0; j < this.customTicksOptions.length; j++) {\r\n            // @ts-ignore\r\n            coords = this.generateFixedStepTicks(min, max, vp, this.customTicksOptions[j], 0);\r\n            const maxValue = this.values.reduce((prev, element) => {\r\n                return (element > prev) ? element : prev;\r\n            }, this.values[0])\r\n\r\n            if ((Math.abs(maxValue - max) < deviation) && (coords.length <= 10) && (coords.length >= 4)) {\r\n                devInd = j;\r\n                deviation = Math.abs(maxValue - max);\r\n            }\r\n\r\n        }\r\n        // @ts-ignore\r\n        coords = this.generateFixedStepTicks(min, max, vp, this.customTicksOptions[devInd], 0);\r\n\r\n\r\n        return coords;\r\n    }\r\n\r\n\r\n    generateCustomDateTicks(min: number, max: number, vp: Rectangle, ctx: CanvasRenderingContext2D) {\r\n        let coords = [];\r\n        // @ts-ignore\r\n        for (let j = 0; j < this.customTicksOptions.length; j++) {\r\n\r\n            const ticksArr = this.generateCustomDateTicksByOption(j, min, max, vp, ctx);\r\n\r\n            coords = ticksArr[0];\r\n            let values = ticksArr[1];\r\n            let labels = ticksArr[2];\r\n\r\n            if (this.checkLabelsOverlap(ctx, coords, labels)) {\r\n\r\n                this.values = values;\r\n                this.labels = labels;\r\n\r\n                return coords;\r\n            }\r\n\r\n        }\r\n\r\n        return coords;\r\n    }\r\n\r\n\r\n    // Метод анимации изменение набора координат тиков\r\n    tickCoordAnimation(from: Point[], to: Point[], duration: number) {\r\n\r\n        let start = performance.now();\r\n        // @ts-ignore \r\n        const animate = (time) => {\r\n\r\n\r\n            let tekTime = (time - start) / duration\r\n            let timeFraction = this.timeFunc(tekTime);\r\n\r\n            if (tekTime > 1) tekTime = 1;\r\n\r\n            const tek = from.map((el, i) => {\r\n                return new Point(from[i].x + (to[i].x - from[i].x) * timeFraction, from[i].y + (to[i].y - from[i].y) * timeFraction);\r\n            });\r\n\r\n            this.coords = tek;\r\n            this.onCoordsChanged.dispatch();\r\n\r\n            if (tekTime < 1) {\r\n                requestAnimationFrame(animate);\r\n            } else {\r\n                this.coords = to;\r\n                this.onCoordsChanged.dispatch();\r\n            }\r\n\r\n        }\r\n\r\n        requestAnimationFrame(animate);\r\n\r\n    }\r\n\r\n\r\n    makeFromPointArr(from: Point[], to: Point[]): Point[] {\r\n        const resultArr: Point[] = [];\r\n\r\n        to.forEach((toPoint) => {\r\n            if (from.length !== 0) {\r\n                const minP = from.reduce((fromPoint, cur) => {\r\n                    if (fromPoint.findDist(toPoint) < cur.findDist(toPoint)) return fromPoint\r\n                    return cur;\r\n                }, from[0])\r\n                resultArr.push(minP);\r\n            }\r\n        });\r\n\r\n        return resultArr;\r\n    }\r\n\r\n\r\n    // генерация пробных тиков\r\n\r\n    generateCustomDateTicksByOption(j: number, min: number, max: number, vp: Rectangle, ctx: CanvasRenderingContext2D): any[] {\r\n\r\n        function dateParser(myDate: string) {\r\n            const arr = myDate.split('.');\r\n            arr[2] = '20' + arr[2];\r\n            const date = new Date(+arr[2], +arr[1] - 1, +arr[0]);\r\n            return date;\r\n        }\r\n\r\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\r\n        let rectXY: number[] = [];\r\n        const transformer = new Transformer();\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                rectXY = [0, min, 1, max];\r\n                break;\r\n\r\n            case 'horizontal':\r\n                rectXY = [min, 0, max, 1];\r\n                break;\r\n        }\r\n\r\n        const fromRect = new Rectangle(rectXY[0], rectXY[1], rectXY[2], rectXY[3]);\r\n\r\n        let pointXY: number[] = [];\r\n\r\n        let coords = [];\r\n        let values = [];\r\n        let labels = [];\r\n\r\n        let yearDel = 1;\r\n        // @ts-ignore\r\n        const partYear = this.customTicksOptions[j];\r\n        switch (partYear) {\r\n            case 'half year':\r\n                yearDel = 2;\r\n                break;\r\n\r\n            case 'third year':\r\n                yearDel = 3;\r\n                break;\r\n\r\n            case 'quarter year':\r\n                yearDel = 4;\r\n                break;\r\n        }\r\n\r\n        for (let i = min + 1; i <= max; i++) {\r\n            //let curLabel = this.customLabels[i];\r\n            //let preLabel = this.customLabels[i-1];\r\n            //let curDate = dateParser(curLabel);\r\n            //let preDate = dateParser(preLabel);\r\n            // @ts-ignore\r\n            let curDate: Date = this.customLabels[i];\r\n            // @ts-ignore\r\n            let preDate: Date = this.customLabels[i - 1];\r\n\r\n            //начала годов\r\n            if ((curDate.getFullYear() - preDate.getFullYear()) !== 0) {\r\n\r\n                switch (this.type) {\r\n                    case 'vertical':\r\n                        pointXY = [0, i];\r\n                        break;\r\n\r\n                    case 'horizontal':\r\n                        pointXY = [i, 0];\r\n                        break;\r\n                }\r\n\r\n                const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n                const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n                coords.push(coordPoint);\r\n                values.push(i);\r\n                labels.push(curDate.getFullYear());\r\n            } else {\r\n                //начала месяцев\r\n                // @ts-ignore\r\n                if ((this.customTicksOptions[j] !== partYear) || (!(curDate.getMonth() % yearDel))) {\r\n                    if ((curDate.getMonth() - preDate.getMonth()) !== 0) {\r\n\r\n                        switch (this.type) {\r\n                            case 'vertical':\r\n                                pointXY = [0, i];\r\n                                break;\r\n\r\n                            case 'horizontal':\r\n                                pointXY = [i, 0];\r\n                                break;\r\n                        }\r\n\r\n                        const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n                        const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n                        coords.push(coordPoint);\r\n                        values.push(i);\r\n                        labels.push(monthNames[curDate.getMonth()]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            //середины месяцев\r\n            // @ts-ignore\r\n            if (this.customTicksOptions[j] == 'half month') {\r\n                if ((curDate.getDay() !== 0) && (curDate.getDay() !== 6)) {\r\n                    if ((curDate.getDate() == 14 || curDate.getDate() == 15 || curDate.getDate() == 16) &&\r\n                        (curDate.getDay() == 1 || curDate.getDay() == 4) || (curDate.getDate() == 14 && curDate.getDay() == 5)) {\r\n                        switch (this.type) {\r\n                            case 'vertical':\r\n                                pointXY = [0, i];\r\n                                break;\r\n\r\n                            case 'horizontal':\r\n                                pointXY = [i, 0];\r\n                                break;\r\n                        }\r\n\r\n                        const valuePoint = new Point(pointXY[0], pointXY[1]);\r\n                        const coordPoint = transformer.getVeiwportCoord(fromRect, vp, valuePoint);\r\n                        coords.push(coordPoint);\r\n                        values.push(i);\r\n                        labels.push(curDate.getDate());\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return [coords, values, labels];\r\n    }\r\n\r\n\r\n\r\n\r\n    checkLabelsOverlap(ctx: CanvasRenderingContext2D, coords: Point[], labels: string[]): boolean {\r\n        for (let i = 1; i < coords.length; i++) {\r\n            const curRec = this.label.getlabelRect(ctx, coords[i], labels[i]);\r\n            const preRec = this.label.getlabelRect(ctx, coords[i - 1], labels[i - 1]);\r\n            if (curRec.countDistBetweenRects(this.type, preRec) <= 0) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    draw(ctx: CanvasRenderingContext2D, viewport: Rectangle) {\r\n        this.coords.forEach((tickCoord, i) => {\r\n            if (this.display) this.drawTick(ctx, tickCoord);\r\n            if (this.label.display) this.label.draw(ctx, tickCoord, this.labels[i]);\r\n        });\r\n    }\r\n\r\n\r\n    drawTick(ctx: CanvasRenderingContext2D, tick: Point) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = this.color;\r\n        ctx.lineWidth = this.linewidth;\r\n        ctx.setLineDash(this.lineDash);\r\n        let r = this.tickSize;\r\n\r\n        switch (this.type) {\r\n            case 'vertical':\r\n                ctx.moveTo(tick.x - r, tick.y);\r\n                ctx.lineTo(tick.x, tick.y);\r\n                ctx.stroke();\r\n                break;\r\n\r\n            case 'horizontal':\r\n                ctx.moveTo(tick.x, tick.y - r);\r\n                ctx.lineTo(tick.x, tick.y);\r\n                ctx.stroke();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n}","import { Rectangle } from \"./Rectangle\";\r\nimport { Point } from \"./Point\";\r\nimport { Signal } from \"signals\"\r\n\r\nexport class Grid {\r\n    \r\n    display: boolean = false;\r\n\r\n    type: string;\r\n    width: number;\r\n    color: string;\r\n    lineDash: number[];\r\n    onOptionsSetted: Signal;\r\n\r\n    constructor(type: string) {\r\n        this.onOptionsSetted = new Signal();\r\n        this.type = type;\r\n        this.width = 1;\r\n        this.color = 'black';\r\n        this.lineDash = [1,0];\r\n    }\r\n\r\n    setOptions(display: boolean, color:string, width: number, lineDash: number[]) {\r\n        \r\n        this.display = display;\r\n        this.width = width;\r\n        this.color = color;\r\n        this.lineDash = lineDash;\r\n\r\n        this.onOptionsSetted.dispatch();\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, vp:Rectangle, coords: Point[]) {\r\n        ctx.strokeStyle = this.color;\r\n        ctx.fillStyle = this.color;\r\n        ctx.lineWidth = this.width;\r\n        ctx.setLineDash(this.lineDash);\r\n\r\n        coords.forEach((tick)=>{\r\n            ctx.beginPath();\r\n            switch (this.type) {\r\n                case 'vertical':\r\n                    ctx.moveTo(vp.x1, tick.y);\r\n                    ctx.lineTo(vp.x2, tick.y);\r\n                break;\r\n    \r\n                case 'horizontal':\r\n                    ctx.moveTo(tick.x, vp.y1);\r\n                    ctx.lineTo(tick.x, vp.y2);\r\n                break;\r\n            };\r\n            ctx.stroke();\r\n        })\r\n\r\n        ctx.setLineDash([]);\r\n    }\r\n\r\n\r\n}","import { Signal } from \"signals\"\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { Ticks } from \"./Ticks\";\r\nimport { Canvas } from \"./Canvas\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Label } from \"./Label\";\r\nimport { Point } from \"./Point\";\r\nimport { Legend } from \"./Legend\";\r\n\r\ninterface axisOptions  {\r\n    lineWidth: number;\r\n    lineColor: string;\r\n    lineDash: number[];\r\n}\r\n\r\n//описание класса\r\n\r\nexport class Axis {\r\n\r\n    canvas: Canvas;\r\n\r\n    name?: string;\r\n    namePosition?: string;\r\n\r\n    label: Label;\r\n\r\n    display: boolean = false;\r\n    position: string = 'start'\r\n\r\n    min: number;\r\n    max: number;\r\n    type: string;\r\n    optionsDraw: axisOptions;\r\n    gridOn: boolean = false;\r\n\r\n    ticks: Ticks;\r\n    customTicks: Ticks[] = [];\r\n    legends: Legend[] = [];\r\n\r\n    grid: Grid;\r\n\r\n    onOptionsSetted: Signal;\r\n    onMinMaxSetted: Signal;\r\n    onCustomTicksAdded: Signal;\r\n    onNameSetted: Signal;\r\n    \r\n    constructor( MinMax: number[], type: string, container: HTMLElement) {\r\n        \r\n        this.onOptionsSetted = new Signal();\r\n        this.onMinMaxSetted = new Signal();\r\n        this.onCustomTicksAdded = new Signal();\r\n        this.onNameSetted = new Signal();\r\n        \r\n\r\n        this.min = 0;\r\n        this.max = 0;\r\n        this.setMinMax(MinMax);\r\n\r\n        this.type = type;\r\n\r\n        this.label = new Label(this.type);\r\n\r\n        this.canvas = new Canvas(container);\r\n        this.canvas.canvas.style.zIndex = \"2\";\r\n\r\n        this.optionsDraw = {\r\n            lineWidth: 1,\r\n            lineColor: '#000000',\r\n            lineDash: []\r\n        };\r\n\r\n        this.ticks = new Ticks(this.type);\r\n        this.grid = new Grid(this.type);\r\n\r\n        this.bindChildSignals();\r\n        this.bindSignals();\r\n    }\r\n\r\n    bindSignals() {\r\n        \r\n        this.onMinMaxSetted.add(() => {\r\n            this.createTicks();\r\n            this.draw();\r\n        })\r\n\r\n        this.onOptionsSetted.add(() => {\r\n            this.draw();\r\n        })\r\n\r\n        this.onCustomTicksAdded.add(()=>{\r\n            this.createTicks();\r\n            this.draw();\r\n        })\r\n\r\n        this.onNameSetted.add(() => {\r\n            this.draw();\r\n        })\r\n\r\n    }\r\n\r\n    bindChildSignals() {\r\n\r\n        //canvas\r\n        this.canvas.resized.add(() => {\r\n            this.createTicks(true);\r\n            this.draw();\r\n        });\r\n\r\n        this.canvas.onPaddingsSetted.add(() => {\r\n            this.createTicks();\r\n            this.draw();\r\n        });\r\n\r\n        //ticks\r\n        this.ticks.onOptionsSetted.add(() => {\r\n            this.createTicks();\r\n            this.draw();\r\n        });\r\n\r\n        this.ticks.onCustomLabelsAdded.add(() => {\r\n            this.createTicks();\r\n            this.draw();\r\n        });\r\n\r\n        this.ticks.onCoordsChanged.add(() => {\r\n            this.draw();\r\n        });\r\n\r\n        //label\r\n        this.label.onOptionsSetted.add(() => {\r\n            this.draw();\r\n        });\r\n\r\n        //ticks.labels\r\n        this.ticks.label.onOptionsSetted.add(() => {\r\n            this.draw();\r\n        });\r\n\r\n        //grid\r\n        this.grid.onOptionsSetted.add(()=>{\r\n            this.draw();\r\n        });\r\n\r\n    }\r\n\r\n    get length():number {\r\n        return Math.abs(this.max-this.min);\r\n    }\r\n\r\n    addLegend(newLegend: Legend) {\r\n        this.legends.push(newLegend);\r\n    }\r\n\r\n    setName(name:string, namePosition:string) {\r\n        this.name = name;\r\n        this.namePosition = namePosition;\r\n        return this;\r\n    }\r\n\r\n    setOptions(position?: string, lineWidth?: number, lineColor?: string, lineDash?: number[]) {\r\n        if (position) this.position = position;\r\n        if (lineWidth) this.optionsDraw.lineWidth = lineWidth;\r\n        if (lineColor) this.optionsDraw.lineColor = lineColor;\r\n        if (lineDash) this.optionsDraw.lineDash = lineDash;\r\n        this.onOptionsSetted.dispatch();\r\n    }\r\n\r\n\r\n    setMinMax(MinMax: number[], hasPlotAnimation?:boolean) {\r\n        let to:number[] = [];\r\n        let from:number[] = [];\r\n\r\n        from = [this.min, this.max];\r\n\r\n        switch (MinMax.length) {\r\n            case 0:\r\n                to = [0, 100];\r\n            break;\r\n\r\n            case 1:\r\n                to = [MinMax[0], 100];\r\n            break;\r\n\r\n            case 2:\r\n                to = [MinMax[0], MinMax[1]];\r\n            break;\r\n        }\r\n\r\n        /*\r\n        if (duration) {\r\n            this.axisRangeAnimation(from, to, duration);\r\n            return;\r\n        }\r\n        */\r\n   \r\n        this.min = to[0];\r\n        \r\n        this.max = to[1];\r\n        \r\n        this.onMinMaxSetted.dispatch(hasPlotAnimation);\r\n\r\n    }\r\n\r\n    draw() {\r\n        const ctx = this.canvas.ctx;\r\n\r\n        if (ctx) {\r\n\r\n            this.canvas.clear();\r\n            const axisVp = this.axisViewport;\r\n            \r\n            if (this.display) this.drawAxis();\r\n            \r\n            this.ticks.draw(ctx, this.canvas.viewport);\r\n            this.customTicks.forEach((ticks) => {\r\n                ticks.draw(ctx, this.canvas.viewport);\r\n            })\r\n            if (this.grid.display) this.grid.draw(ctx, this.canvas.viewport, this.ticks.coords);\r\n            \r\n            this.drawAxisName();\r\n\r\n            this.legends.forEach((legend) => {\r\n                legend.draw(ctx, this.canvas.viewport);\r\n            })\r\n        }\r\n    }\r\n\r\n    createTicks(noAnimate?: boolean) {\r\n        const ctx = this.canvas.ctx;\r\n        if (ctx) {\r\n            this.ticks.createTicks(this.min, this.max, this.axisViewport, ctx, noAnimate);\r\n            this.customTicks.forEach((ticks) => {\r\n                ticks.createTicks(this.min, this.max, this.axisViewport, ctx, noAnimate);\r\n            })\r\n        }\r\n    }\r\n\r\n    addCustomTicks(ticks: Ticks) {\r\n        ticks.onCoordsChanged.add(() => {\r\n            this.draw();\r\n        });\r\n        this.customTicks.push(ticks);\r\n        this.onCustomTicksAdded.dispatch();\r\n    }\r\n\r\n    get axisViewport(): Rectangle {\r\n        const vp: Rectangle = this.canvas.viewport;\r\n        let axisVP: Rectangle = new Rectangle(0, 0, 0, 0);\r\n        switch(this.position) {\r\n            case 'start':\r\n                switch(this.type) {\r\n                    case 'vertical':\r\n                        axisVP = new Rectangle(vp.x1, vp.y1, vp.x1, vp.y2);\r\n                    break;\r\n                  \r\n                    case 'horizontal':\r\n                        axisVP = new Rectangle(vp.x1, vp.y2, vp.x2, vp.y2);\r\n                    break;\r\n                }\r\n            break;\r\n          \r\n            case 'end':\r\n                case 'start':\r\n                    switch(this.type) {\r\n                        case 'vertical':\r\n                            axisVP = new Rectangle(vp.x2, vp.y1, vp.x2, vp.y2);\r\n                        break;\r\n                      \r\n                        case 'horizontal':\r\n                            axisVP = new Rectangle(vp.x1, vp.y1, vp.x2, vp.y1);\r\n                        break;\r\n                    }\r\n                break;\r\n            break;\r\n\r\n        }\r\n\r\n        return axisVP;\r\n    }\r\n\r\n    drawAxis() {\r\n        const ctx = this.canvas.ctx;\r\n        const viewport = this.axisViewport;\r\n\r\n        if (ctx) {\r\n            ctx.strokeStyle = this.optionsDraw.lineColor;\r\n            ctx.lineWidth = this.optionsDraw.lineWidth;\r\n            ctx.setLineDash(this.optionsDraw.lineDash);\r\n            ctx.beginPath();\r\n            ctx.moveTo(viewport.x1, viewport.y1);\r\n            ctx.lineTo(viewport.x2, viewport.y2);\r\n            ctx.stroke();\r\n            ctx.setLineDash([]);\r\n        }\r\n    }\r\n\r\n    drawAxisName() {\r\n        const ctx = this.canvas.ctx;\r\n        const viewport = this.canvas.viewport;\r\n\r\n        let xCoord = 0;\r\n        let yCoord = 0;\r\n\r\n        (this.type == 'horizontal') ? xCoord = viewport.midX : ((this.namePosition == 'start') ? xCoord = viewport.x1 : xCoord = viewport.x2); \r\n        (this.type == 'vertical') ? yCoord = viewport.midY : ((this.namePosition == 'start') ? yCoord = viewport.y2 : yCoord = viewport.y1);\r\n        \r\n        const coord = new Point(xCoord, yCoord);\r\n\r\n        if ((this.name) && (ctx)) {\r\n            this.label.draw(ctx, coord, this.name);\r\n        }\r\n    }\r\n\r\n/*\r\n    axisRangeAnimation(from: number[], to: number[], duration: number) {\r\n        \r\n        let start = performance.now();\r\n        \r\n        const animate = (time) => {\r\n            let timeFraction = (time - start) / duration;\r\n            if (timeFraction > 1) timeFraction = 1;\r\n            this.min = from[0]+(to[0] - from[0])*timeFraction;\r\n            this.max = from[1]+(to[1] - from[1])*timeFraction;\r\n            this.onMinMaxSetted.dispatch();\r\n            if (timeFraction < 1) {\r\n                requestAnimationFrame(animate);\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(animate);\r\n    }\r\n*/\r\n\r\n  }","import { Canvas } from \"./Canvas\";\r\nimport { Point } from \"./Point\";\r\n\r\nexport class BackGround {\r\n    \r\n    type: string = 'default'\r\n    canvas: Canvas;\r\n\r\n    constructor(type: string, container: HTMLElement) {\r\n        this.type = type;\r\n        this.canvas = new Canvas(container);\r\n        this.canvas.canvas.style.zIndex = \"1\";\r\n    }\r\n\r\n    draw(xCoord: Point[], yCoord: Point[]) {\r\n        this.canvas.clear();\r\n        switch (this.type) {\r\n            case 'coloredGrid_cbh':\r\n                this.drawColoredGrid(xCoord, yCoord);\r\n            break;\r\n        }\r\n\r\n    }\r\n\r\n    drawColoredGrid(xCoord: Point[], yCoord: Point[]) {\r\n        const ctx = this.canvas.ctx;\r\n        \r\n        if (ctx) {\r\n            \r\n            ctx.globalAlpha = 0.1;\r\n            const colorPalette: string[] = ['#8CCB76', '#BED68D', '#E7D180', '#CC9263', '#CF5031'];\r\n\r\n            for (let i = 0; i < xCoord.length - 1; i++) {\r\n                ctx.fillStyle = colorPalette[i];\r\n                ctx.fillRect(xCoord[i].x, yCoord[0].y, xCoord[i + 1].x - xCoord[i].x, yCoord[yCoord.length - 1].y - yCoord[0].y);\r\n            }\r\n\r\n            for (let i = 0; i < yCoord.length - 1; i++) {\r\n                ctx.fillStyle = colorPalette[i];\r\n                ctx.fillRect(xCoord[0].x, yCoord[i].y, xCoord[xCoord.length - 1].x - xCoord[0].x, yCoord[i + 1].y - yCoord[i].y);\r\n            }\r\n\r\n            ctx.globalAlpha = 1;\r\n\r\n        }\r\n    }\r\n\r\n}","import { Signal } from \"signals\"\r\nimport { Canvas } from \"../Canvas\";\r\nimport { Point } from \"../Point\";\r\nimport { Rectangle } from \"../Rectangle\";\r\nimport { Transformer } from \"../Transformer\";\r\n\r\nimport { Series } from \"../Series\";\r\n\r\n\r\nexport class SeriesBase implements Series {\r\n\r\n    id: string;\r\n    seriesData: number[][];\r\n    plotData: Point[][];\r\n    plots: string[];\r\n    hasAnimation: boolean = false;\r\n    animationDuration: number = 300;\r\n    canvas: Canvas;\r\n    extremes: number[];\r\n    \r\n\r\n    timeFunc: (time: number) => number = function (time) {\r\n        return time;\r\n      };\r\n\r\n    onPlotDataChanged: Signal;\r\n    onSeriesDataChanged: Signal;\r\n    \r\n    constructor(id: string, container: HTMLElement, seriesData: number[][]) {\r\n        this.onPlotDataChanged = new Signal();\r\n        this.onSeriesDataChanged = new Signal();\r\n        this.id = id;\r\n        this.seriesData = this.getInitialData(seriesData);\r\n        this.extremes = this.findExtremes();\r\n\r\n        this.plots = [];\r\n        this.plotData = [];\r\n        this.canvas = new Canvas(container);\r\n        this.canvas.canvas.style.zIndex = \"0\";\r\n\r\n        return this\r\n    }\r\n\r\n    bindChildSignals() {\r\n        this.canvas.resized.add(() => {\r\n\r\n        })\r\n    }\r\n\r\n\r\n    getInitialData(initialData: number[][]): number[][] {\r\n        let resultData: number[][] = []\r\n        \r\n        initialData.forEach((dataRow) => {\r\n            const ind: number[] = [];\r\n            const val: number[] = [];\r\n            dataRow.forEach((element, index) => {\r\n                ind.push(index);\r\n                val.push(element);\r\n            });\r\n            resultData.push(ind);\r\n            resultData.push(val);\r\n        })\r\n\r\n        return resultData;\r\n    }\r\n\r\n\r\n    setPlotsIds(...plotIds: string[]) {\r\n        this.plots = plotIds;       \r\n    }\r\n\r\n\r\n    findExtremes(data?:number[][]): number[] {\r\n\r\n        let seriesData:number[][] = [];\r\n\r\n        if (data) seriesData = data;\r\n        if (!data) seriesData = this.seriesData.slice();\r\n\r\n        let xMin: number = seriesData[0][0];\r\n        let xMax: number = seriesData[0][0];\r\n        let yMin: number = seriesData[1][0];\r\n        let yMax: number = seriesData[1][0];\r\n\r\n        seriesData.forEach((dataRow, ind) => {\r\n            dataRow.forEach((element) => {\r\n                switch (ind % 2) {\r\n                    case 0:\r\n                        if (element < xMin) xMin = element;\r\n                        if (element > xMax) xMax = element;\r\n                    break;\r\n\r\n                    case 1:\r\n                        if (element < yMin) yMin = element;\r\n                        if (element > yMax) yMax = element;\r\n                    break;\r\n                }\r\n            })\r\n        })\r\n        \r\n        return [xMin,xMax,yMin,yMax];\r\n    }\r\n\r\n\r\n    get dataRect(): Rectangle {\r\n        const extremes = this.extremes;\r\n        return new Rectangle(extremes[0], extremes[2], extremes[1], extremes[3]);\r\n    }\r\n\r\n\r\n    getDataRange(type:string, min:number, max:number): number[][] {\r\n        const data: number[][] = []\r\n \r\n        for (let i = 0; i < this.seriesData.length; i = i + 2) {\r\n            const ind: number[] = [];\r\n            const val: number[] = [];\r\n\r\n            let dataRowInd = this.seriesData[i].slice();\r\n            let dataRowVal = this.seriesData[i + 1].slice();\r\n            if (i == 2) {\r\n                dataRowInd = dataRowInd.slice();\r\n                dataRowVal = dataRowVal.slice();\r\n            }\r\n\r\n            dataRowInd.forEach((el,i) => {\r\n                if ((el >= min) && (el <= max)) {\r\n                    ind.push(dataRowInd[i]);\r\n                    val.push(dataRowVal[i]);\r\n                }\r\n            });\r\n\r\n            data.push(ind);\r\n            data.push(val);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    replaceSeriesData(seriesData_to: number[][], animate: boolean) {\r\n        this.seriesData = this.getInitialData(seriesData_to);\r\n        this.extremes = this.findExtremes();\r\n        if (animate) this.onSeriesDataChanged.dispatch(this);\r\n    }\r\n\r\n    \r\n    getClosestDataPointX(seriesPoint: Point): [Point, number] {\r\n        let ind = 0;\r\n        const resultPoint =  this.seriesData[0].reduce((prev, curr, i) => {\r\n            let curPoint = new Point(curr, this.seriesData[1][i])\r\n            const curDif = seriesPoint.findDistX(curPoint);\r\n            const prevDif = seriesPoint.findDistX(prev);\r\n            if (curDif < prevDif) {\r\n                ind = i;\r\n                return curPoint\r\n            }\r\n            return prev\r\n              }, new Point(this.seriesData[0][0], this.seriesData[1][0]));\r\n        return [resultPoint, ind];\r\n    }\r\n\r\n    getClosestDataPointXY(seriesPoint: Point): [Point, number] {\r\n        let ind = 0;\r\n        const resultPoint =  this.seriesData[0].reduce((prev, curr, i) => {\r\n            let curPoint = new Point(curr, this.seriesData[1][i])\r\n            const curDif = seriesPoint.findDist(curPoint);\r\n            const prevDif = seriesPoint.findDist(prev);\r\n            if (curDif < prevDif) {\r\n                ind = i;\r\n                return curPoint\r\n            }\r\n            return prev\r\n              }, new Point(this.seriesData[0][0], this.seriesData[1][0]));\r\n        return [resultPoint, ind];\r\n    }\r\n\r\n    getClosestPlotPointX(coordPoint: Point): Point {\r\n        const coord =  this.plotDataArr.reduce((prev, curr, i) => {\r\n            const curDif = coordPoint.findDistX(curr);\r\n            const prevDif = coordPoint.findDistX(prev);\r\n            if (curDif < prevDif) return curr\r\n            return prev\r\n              }, this.plotDataArr[0]);\r\n        return new Point(coord.x, coord.y);\r\n    }\r\n\r\n    getClosestPlotPointXY(coordPoint: Point): Point {\r\n        const coord =  this.plotDataArr.reduce((prev, curr, i) => {\r\n            const curDif = coordPoint.findDist(curr);\r\n            const prevDif = coordPoint.findDist(prev);\r\n            if (curDif < prevDif) return curr\r\n            return prev\r\n              }, this.plotDataArr[0]);\r\n        return new Point(coord.x, coord.y);\r\n    }\r\n\r\n    get plotDataArr(): Point[] {\r\n\r\n        const lineArr: Point[] = [];\r\n\r\n        for (let i = 0; i < this.plotData.length; i++) {\r\n            let plotRow = this.plotData[i];\r\n            if (i == 1) {\r\n                plotRow = plotRow.slice().reverse();\r\n            }\r\n            plotRow.forEach((element) => {\r\n                lineArr.push(element);\r\n            });\r\n        }\r\n\r\n        return lineArr;\r\n    }\r\n\r\n    updatePlotData(axisRect: Rectangle, vp: Rectangle, noAnimation?: boolean) {\r\n        \r\n        const plotData = this.generatePlotData(axisRect, vp);\r\n        \r\n        //если нужна анимация графиков\r\n        if (noAnimation) {\r\n            this.plotData = plotData;\r\n            this.onPlotDataChanged.dispatch(this);\r\n            return this;\r\n        }\r\n        \r\n\r\n        if (this.hasAnimation) {\r\n\r\n            const fromData: Point[][] = []\r\n            const toData: Point[][] = []\r\n\r\n            for (let i = 0; i < this.plotData.length; i++) {\r\n                let plotRow = this.plotData[i];\r\n                let fromTo = this.makeFromPointArr(plotRow.slice(), plotData[i].slice());\r\n                fromData.push(fromTo[0]);\r\n                toData.push(fromTo[1]);\r\n            }\r\n        \r\n            this.сoordAnimation(fromData, toData, this.animationDuration, plotData);\r\n\r\n        }\r\n\r\n       \r\n        this.plotData = plotData;\r\n        this.onPlotDataChanged.dispatch(this);\r\n        return this;\r\n    }\r\n\r\n\r\n    generatePlotData(axisRect: Rectangle, vp: Rectangle): Point[][] {\r\n\r\n        const seriesData = this.getDataRange('ind', axisRect.x1, axisRect.x2)\r\n       // const seriesData = this.seriesData.slice();\r\n\r\n        let plotData: Point[][] = [];\r\n\r\n        const transformer = new Transformer();\r\n\r\n        for (let i = 0; i < seriesData.length; i = i + 2) {\r\n\r\n            let plotDataRow: Point[] = []\r\n\r\n            let dataRowInd = seriesData[i];\r\n            let dataRowVal = seriesData[i + 1];\r\n\r\n            dataRowInd.forEach((element, ind) => {\r\n                const seriesPoint = new Point(dataRowInd[ind], dataRowVal[ind]);\r\n                const plotPoint = transformer.getVeiwportCoord(axisRect, vp, seriesPoint);\r\n                plotDataRow.push(new Point(Math.round(plotPoint.x), Math.round(plotPoint.y)));\r\n            });\r\n\r\n            plotData.push(plotDataRow);\r\n\r\n        }\r\n\r\n        return plotData;\r\n \r\n    }\r\n\r\n\r\n    // Метод анимации изменение набора координат\r\n    сoordAnimation(fromData: Point[][], toData:Point[][], duration: number, finalData:Point[][]) {\r\n\r\n        let start = performance.now();\r\n\r\n        \r\n        \r\n        const animate = (time: number) => {\r\n\r\n            let tekTime = (time - start) / duration\r\n            let timeFraction = this.timeFunc(tekTime);\r\n\r\n            if (tekTime > 1) tekTime = 1;\r\n\r\n            let tekData: Point[][] = [];\r\n\r\n            fromData.forEach((fromRow, ind)=> {\r\n                const tekRow = fromRow.map((el, i) => {\r\n                    return new Point(Math.round(fromRow[i].x + (toData[ind][i].x - fromRow[i].x) * timeFraction), Math.round(fromRow[i].y + (toData[ind][i].y - fromRow[i].y) * timeFraction) );\r\n                });\r\n                tekData.push(tekRow);\r\n            })\r\n\r\n            \r\n            this.plotData = tekData;\r\n\r\n            this.onPlotDataChanged.dispatch(this);\r\n\r\n            if (tekTime < 1) {\r\n                requestAnimationFrame(animate);\r\n            } else {\r\n                this.plotData = finalData;\r\n                this.onPlotDataChanged.dispatch(this);\r\n            }\r\n\r\n        }\r\n\r\n        requestAnimationFrame(animate);\r\n\r\n    }\r\n\r\n\r\n    makeFromPointArr(from: Point[], to: Point[]): Point[][] {\r\n        const resultArr: Point[][] = [];\r\n\r\n        if (from.length == 0) return resultArr;\r\n\r\n        const fromResult: Point[] = [];\r\n        const toResult: Point[] = [];\r\n\r\n        const toArr = to.slice();\r\n        const fromArr = from.slice();\r\n\r\n    // если from < to\r\n        if (fromArr.length < toArr.length) {\r\n\r\n         \r\n            const capacity = Math.floor(toArr.length/fromArr.length);\r\n            let fromInd = 0;\r\n            let roomCount = 0;\r\n\r\n            while (fromInd < fromArr.length) {\r\n                fromResult.push(fromArr[fromInd]);\r\n                toArr.shift();\r\n                roomCount = roomCount + 1;\r\n                if (roomCount == capacity) {\r\n                    fromInd = fromInd + 1;\r\n                    roomCount = 0;\r\n                }\r\n            }\r\n        \r\n            while (toArr.length !== 0) {\r\n                fromResult.push(fromArr[fromArr.length-1]);\r\n                toArr.shift();\r\n            }\r\n        \r\n            resultArr.push(fromResult);\r\n            resultArr.push(to);\r\n            \r\n            return resultArr;\r\n        }\r\n    \r\n    // если from > to\r\n        else {\r\n\r\n            const capacity = Math.floor(fromArr.length / toArr.length);\r\n            let toInd = 0;\r\n            let roomCount = 0;\r\n\r\n            while (toInd < toArr.length) {\r\n                toResult.push(toArr[toInd]);\r\n                fromArr.shift();\r\n                roomCount = roomCount + 1;\r\n                if (roomCount == capacity) {\r\n                    toInd = toInd + 1;\r\n                    roomCount = 0;\r\n                }\r\n            }\r\n        \r\n            while (fromArr.length !== 0) {\r\n                toResult.push(toArr[toArr.length-1]);\r\n                fromArr.shift();\r\n            }\r\n        \r\n            resultArr.push(from);\r\n            resultArr.push(toResult);\r\n            \r\n            return resultArr;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n  \r\n  ","import { Series } from \"../Series\";\r\nimport { Rectangle } from \"../Rectangle\";\r\nimport { Point } from \"../Point\";\r\nimport { Transformer } from \"../Transformer\";\r\nimport { SeriesBase } from \"./SeriesBase\";\r\n\r\nexport class SeriesXY extends SeriesBase implements Series {\r\n\r\n    plotLabels: string[] = [];\r\n    labels?: string[];\r\n\r\n    constructor(id: string, container: HTMLElement, seriesData: number[][], labels?: string[]) {\r\n        super(id, container, seriesData);\r\n        this.canvas.canvas.style.zIndex = \"3\";\r\n        if (labels) this.labels = labels; \r\n    }\r\n\r\n    getInitialData(initialData: number[][]): number[][] {\r\n        let resultData: number[][] = []\r\n\r\n        const x: number[] = [];\r\n        const y: number[] = [];\r\n\r\n        initialData[0].forEach((element, index) => {\r\n            x.push(element);\r\n            y.push(initialData[1][index]);\r\n        });\r\n\r\n        resultData.push(x);\r\n        resultData.push(y);\r\n\r\n        return resultData;\r\n    }\r\n\r\n    generatePlotData(axisRect: Rectangle, vp: Rectangle): Point[][] {\r\n\r\n        const seriesData = this.getDataRange('ind', axisRect.x1, axisRect.x2)\r\n       // const seriesData = this.seriesData.slice();\r\n\r\n        let plotData: Point[][] = [];\r\n\r\n        const transformer = new Transformer();\r\n\r\n        let plotDataRow: Point[] = []\r\n\r\n        let dataRowX = seriesData[0];\r\n        let dataRowY = seriesData[1];\r\n\r\n        dataRowX.forEach((element, ind) => {\r\n            const seriesPoint = new Point(dataRowX[ind], dataRowY[ind]);\r\n            const plotPoint = transformer.getVeiwportCoord(axisRect, vp, seriesPoint);\r\n            plotDataRow.push(new Point(Math.round(plotPoint.x), Math.round(plotPoint.y)));\r\n        });\r\n\r\n        plotData.push(plotDataRow);\r\n\r\n        return plotData;\r\n \r\n    }\r\n\r\n    getDataRange(type:string, min:number, max:number): number[][] {\r\n        const data: number[][] = []\r\n        this.plotLabels.splice(0,this.plotLabels.length);\r\n \r\n        const x: number[] = [];\r\n        const y: number[] = [];\r\n\r\n        let dataRowX = this.seriesData[0].slice();\r\n        let dataRowY = this.seriesData[1].slice();\r\n\r\n        dataRowX.forEach((el,i) => {\r\n            if ((el >= min) && (el <= max)) {\r\n                x.push(dataRowX[i]);\r\n                y.push(dataRowY[i]);\r\n                if (this.labels) this.plotLabels.push(this.labels[i]);\r\n            }\r\n        });\r\n\r\n        data.push(x);\r\n        data.push(y);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\n\r\n","import { Canvas } from \"./Canvas\";\r\nimport { Data } from \"./Data\";\r\nimport { Plot } from \"./Plot\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Transformer } from \"./Transformer\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { Point } from \"./Point\";\r\nimport { Series } from \"./Series\";\r\nimport { BackGround } from \"./BackGround\";\r\nimport { Signal } from \"signals\";\r\nimport { SeriesBase } from \"./series/SeriesBase\";\r\nimport { SeriesXY } from \"./series/SeriesXY\";\r\n\r\nexport class Chart {\r\n\r\n    container: HTMLElement\r\n    canvasTT: Canvas;\r\n    data: Data;\r\n    plots: Plot[]; \r\n    xAxis: Axis;\r\n    yAxis: Axis;\r\n    hasBorder: boolean = false;\r\n    clipSeriesCanvas: boolean = false;\r\n    background?: BackGround;\r\n    \r\n\r\n    tooltipsDataIndexUpdated: Signal;\r\n\r\n    constructor(container: HTMLElement, xMinMax: number[], yMinMax: number[]) {\r\n        //signals\r\n        this.tooltipsDataIndexUpdated = new Signal();\r\n        this.container = container;\r\n        \r\n        this.canvasTT = new Canvas(container);\r\n        this.canvasTT.turnOnListenres();\r\n        this.canvasTT.canvas.style.zIndex = \"4\";\r\n\r\n        this.data = new Data();\r\n        this.plots = [];\r\n\r\n        this.xAxis = new Axis(xMinMax, 'horizontal', container);\r\n        this.yAxis = new Axis(yMinMax, 'vertical', container);\r\n\r\n        //bind\r\n        this.tooltipsDraw = this.tooltipsDraw.bind(this);\r\n        this.seriesReDraw = this.seriesReDraw.bind(this);    \r\n\r\n        //call methods\r\n        this.bindChildSignals();\r\n        this.tooltipsDraw(true);\r\n    }\r\n\r\n\r\n    switchResolution() {\r\n        this.xAxis.canvas.squareRes = true;\r\n        this.yAxis.canvas.squareRes = true;\r\n        this.canvasTT.squareRes = true;\r\n\r\n        if (this.background) this.background.canvas.squareRes = true;\r\n\r\n        this.data.seriesStorage.forEach((series, ind) => {\r\n            series.canvas.squareRes = true;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    bindChildSignals() {\r\n        \r\n        //min max\r\n        this.xAxis.onMinMaxSetted.add((hasPlotAnimation) => {\r\n            // @ts-ignore\r\n            //this.xAxis.createTicks(this.xAxis.min, this.xAxis.max, this.xAxis.getaxisViewport(this.canvasA.viewport), this.canvasA.ctx);\r\n            if (hasPlotAnimation) this.seriesUpdatePlotData();\r\n            this.tooltipsDraw(true);\r\n        });\r\n\r\n        //min max\r\n        this.yAxis.onMinMaxSetted.add((hasPlotAnimation) => {\r\n            //this.yAxis.createTicks(this.yAxis.min, this.yAxis.max, this.yAxis.getaxisViewport(this.canvasA.viewport), this.canvasA.ctx);\r\n            if (hasPlotAnimation) this.seriesUpdatePlotData();\r\n            this.tooltipsDraw(true);\r\n        });\r\n        // canvas\r\n\r\n        this.canvasTT.mouseMoved.add(this.tooltipsDraw);\r\n        this.canvasTT.mouseOuted.add(() => {\r\n            this.tooltipsDraw(true);\r\n        });\r\n        this.canvasTT.touchEnded.add(() => {\r\n            this.tooltipsDraw(true);\r\n        });\r\n\r\n    }\r\n\r\n    get axisRect(): Rectangle {\r\n        return (new Rectangle(this.xAxis.min, this.yAxis.min, this.xAxis.max, this.yAxis.max))\r\n    }\r\n\r\n\r\n\r\n    // генерируем PlotData у series\r\n    seriesUpdatePlotData() {\r\n        this.data.seriesStorage.forEach((series, ind) => {\r\n            series.updatePlotData(this.axisRect, series.canvas.viewport);\r\n        })\r\n    }\r\n\r\n\r\n    // отрисовка одной серии\r\n    seriesReDraw(series: Series) {\r\n            const canvas = series.canvas;\r\n            canvas.clear();\r\n            if (this.clipSeriesCanvas) canvas.clipCanvas();\r\n\r\n            series.plots.forEach((plotId) => {\r\n                const plot: Plot | null = this.findPlotById(plotId);\r\n                if (plot) {\r\n                    // @ts-ignore\r\n                    plot.drawPlot(canvas.ctx, series.plotDataArr, canvas.viewport, series.plotLabels);\r\n                };\r\n            })   \r\n        this.tooltipsDraw(true);\r\n    }\r\n\r\n    setCanvasPaddings(...paddings: number[]) {\r\n        this.canvasTT.setPaddings(...paddings);\r\n        this.xAxis.canvas.setPaddings(...paddings);\r\n        this.yAxis.canvas.setPaddings(...paddings);\r\n\r\n        if (this.background) this.background.canvas.setPaddings(...paddings);\r\n\r\n        this.data.seriesStorage.forEach((series, ind) => {\r\n            series.canvas.setPaddings(...paddings);\r\n        })\r\n    }\r\n\r\n\r\n    addBackGround(type: string) {\r\n        this.background = new BackGround(type, this.container);\r\n        //ticks\r\n        this.xAxis.ticks.onCoordsChanged.add(() => {\r\n            this.backgroundDraw();\r\n        });\r\n\r\n        this.yAxis.ticks.onCoordsChanged.add(() => {\r\n            this.backgroundDraw();\r\n        });\r\n\r\n        this.background.canvas.resized.add(() => {\r\n            this.backgroundDraw();\r\n        })\r\n\r\n        this.backgroundDraw();\r\n    }\r\n\r\n    backgroundDraw() {\r\n        if (this.background) this.background.draw(this.xAxis.ticks.coords, this.yAxis.ticks.coords)\r\n    }\r\n\r\n\r\n    addPlot(id: string, type: string, ...options: any) {\r\n        const plot = new Plot(id, type, ...options);\r\n        this.plots.push(plot);\r\n        return plot;\r\n    }\r\n\r\n\r\n    findPlotById(id: string): Plot | null {\r\n        const plots: Plot[] = this.plots.filter((plot) => {\r\n            return plot.id === id\r\n        });\r\n        if (plots.length !== 0) return plots[0];\r\n        return null;\r\n    }\r\n\r\n\r\n    addSeries(id: string, seriesData: number[][], labels?:string[]) {\r\n        const newSeries: Series = new SeriesXY(id, this.container, seriesData, labels);\r\n        this.data.seriesStorage.push(newSeries);\r\n        newSeries.canvas.setPaddings(this.canvasTT.top, this.canvasTT.right, this.canvasTT.bottom, this.canvasTT.left);\r\n        newSeries.updatePlotData(this.axisRect, newSeries.canvas.viewport, true);\r\n        newSeries.onPlotDataChanged.add( this.seriesReDraw );\r\n        newSeries.onSeriesDataChanged.add((series) => {\r\n            series.updatePlotData(this.axisRect, series.canvas.viewport);\r\n        });\r\n        newSeries.canvas.resized.add(() => {\r\n            newSeries.updatePlotData(this.axisRect, newSeries.canvas.viewport, true);\r\n        })\r\n\r\n        newSeries.canvas.onPaddingsSetted.add(() => {\r\n            newSeries.updatePlotData(this.axisRect, newSeries.canvas.viewport, true);\r\n        })\r\n        return newSeries;\r\n    }\r\n\r\n    addSeriesRow(id: string, seriesData: number[][]) {\r\n        const newSeries: Series = new SeriesBase(id, this.container, seriesData);\r\n\r\n        this.data.seriesStorage.push(newSeries);\r\n        newSeries.canvas.setPaddings(this.canvasTT.top, this.canvasTT.right, this.canvasTT.bottom, this.canvasTT.left);\r\n        newSeries.updatePlotData(this.axisRect, newSeries.canvas.viewport, true);\r\n        newSeries.onPlotDataChanged.add( this.seriesReDraw );\r\n\r\n        newSeries.onSeriesDataChanged.add((series) => {\r\n            series.updatePlotData(this.axisRect, series.canvas.viewport);\r\n        });\r\n        newSeries.canvas.resized.add(() => {\r\n            newSeries.updatePlotData(this.axisRect, newSeries.canvas.viewport, true);\r\n        })\r\n\r\n        newSeries.canvas.onPaddingsSetted.add(() => {\r\n            newSeries.updatePlotData(this.axisRect, newSeries.canvas.viewport, true);\r\n        })\r\n\r\n        return newSeries;\r\n    }\r\n\r\n    switchDataAnimation(hasAnimation: boolean, duration?: number) {\r\n        this.data.seriesStorage.forEach((series, ind) => {\r\n            series.hasAnimation = hasAnimation;\r\n            if (duration) series.animationDuration = duration;\r\n        })\r\n    }\r\n\r\n\r\n    // отрисовываем тултипы\r\n    tooltipsDraw(drawLast?: boolean) {\r\n        this.canvasTT.clear();\r\n\r\n        const mouseXY = this.canvasTT.mouseCoords;\r\n\r\n        const transformer = new Transformer();\r\n\r\n        let delta_abs_buf: Point[] = [];\r\n        let delta_abs_buf_coord: Point[] = [];\r\n        // @ts-ignore\r\n        let data_y_end_buf = [];\r\n\r\n        this.data.seriesStorage.forEach((series) => {\r\n\r\n            const seriesX = this.xAxis.min + mouseXY.x * (this.xAxis.length) / this.canvasTT.viewport.width;\r\n            const seriesY = this.yAxis.max - mouseXY.y * (this.yAxis.length) / this.canvasTT.viewport.height;\r\n            const sriesP = new Point(seriesX, seriesY);\r\n            \r\n            const [pointData, tt_ind] = series.getClosestDataPointX(sriesP);\r\n            const [pointDataXY, tt_ind_XY] = series.getClosestDataPointXY(sriesP);\r\n            const tooltipCoordX = series.getClosestPlotPointX(new Point(mouseXY.x+this.canvasTT.left, mouseXY.y+this.canvasTT.top));\r\n            const tooltipCoordXY = series.getClosestPlotPointXY(new Point(mouseXY.x+this.canvasTT.left, mouseXY.y+this.canvasTT.top));\r\n\r\n            this.tooltipsDataIndexUpdated.dispatch(pointData.x);\r\n            const tooltipCoord = transformer.getVeiwportCoord(this.axisRect, this.canvasTT.viewport, pointData);\r\n\r\n            series.plots.forEach((plotId) => {\r\n                const plot: Plot | null = this.findPlotById(plotId);\r\n                if (plot) {\r\n                    plot.tooltips.forEach((tooltip) => {\r\n\r\n                        if (drawLast) {\r\n\r\n                            switch (tooltip.type) {\r\n\r\n                                case 'data_y_end':\r\n                                    data_y_end_buf.push([tooltip, tooltipCoordX, pointData]);\r\n                                    break;\r\n\r\n                                case 'circle_series':\r\n                                    // @ts-ignore\r\n                                    tooltip.drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, new Point(tooltipCoordX.x, tooltipCoordX.y), pointData);\r\n                                    break;\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            switch (tooltip.type) {\r\n\r\n                                case 'delta_abs':\r\n                                    if (delta_abs_buf.length == 0) {\r\n                                        delta_abs_buf.push(pointData);\r\n                                        delta_abs_buf_coord.push(tooltipCoordX);\r\n                                    } else {\r\n                                        const ttCoord: Point = (delta_abs_buf_coord[0].y < tooltipCoordX.y) ? delta_abs_buf_coord[0] : tooltipCoordX;\r\n                                        const absData = new Point(Math.abs(pointData.x - delta_abs_buf[0].x), Math.abs(pointData.y - delta_abs_buf[0].y));\r\n                                        // @ts-ignore\r\n                                        tooltip.drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, ttCoord, absData);\r\n                                        delta_abs_buf.pop();\r\n                                        delta_abs_buf_coord.pop();\r\n                                    }\r\n                                    break;\r\n\r\n                                case 'data_y_end':\r\n                                    data_y_end_buf.push([tooltip, tooltipCoordX, pointData]);\r\n                                    break;\r\n\r\n                                case 'label_x_start':\r\n                                    // @ts-ignore\r\n                                    tooltip.drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, new Point(tooltipCoordX.x, tooltipCoordX.y), pointData, tt_ind);\r\n                                    break;\r\n\r\n                                case 'line_vertical_full':\r\n                                    // @ts-ignore\r\n                                    tooltip.drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, new Point(tooltipCoordX.x, tooltipCoordX.y), pointData);\r\n                                    break;\r\n\r\n                                case 'data_label':\r\n                                    // @ts-ignore\r\n                                    tooltip.drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, new Point(tooltipCoordXY.x, tooltipCoordXY.y), pointDataXY, tt_ind_XY);\r\n                                    // @ts-ignore\r\n                                    if (plot.type == 'unicode') plot.drawPlot(this.canvasTT.ctx, [tooltipCoordXY], this.canvasTT.viewport, '', true);\r\n                                    break;\r\n\r\n                                default:\r\n                                    // @ts-ignore\r\n                                    tooltip.drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, new Point(tooltipCoordX.x, tooltipCoordX.y), pointData);\r\n\r\n                                    break;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    })\r\n                };\r\n            })\r\n        })\r\n\r\n        // рассталкиваем друг от друга боковые тултипы\r\n        // @ts-ignore\r\n        data_y_end_buf.sort((a, b) => a[1].y - b[1].y);\r\n\r\n        for (let i = 0; i < data_y_end_buf.length - 1; i++) {\r\n            // @ts-ignore\r\n            const rect1 = data_y_end_buf[i][0].drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, data_y_end_buf[i][1], data_y_end_buf[i][2], 0, false);\r\n            // @ts-ignore\r\n            const rect2 = data_y_end_buf[i + 1][0].drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, data_y_end_buf[i + 1][1], data_y_end_buf[i + 1][2], 0, false);\r\n\r\n            if (rect1.y2 > rect2.y1) {\r\n\r\n                const abs = Math.abs(rect1.y2 - rect2.y1);\r\n\r\n                let abs1 = -abs * 0.5;\r\n                let abs2 = abs * 0.5;\r\n\r\n                if (Math.abs(rect1.y1 - this.canvasTT.viewport.y1) < Math.abs(abs1)) {\r\n                    abs1 = -Math.abs(rect1.y1 - this.canvasTT.viewport.y1);\r\n                    abs2 = (abs + abs1);\r\n                }\r\n\r\n                if (Math.abs(rect2.y2 - this.canvasTT.viewport.y2) < abs2) {\r\n                    abs2 = -Math.abs(rect1.y2 - this.canvasTT.viewport.y2);\r\n                    abs1 = -(abs - abs2);\r\n                }\r\n                // @ts-ignore\r\n                data_y_end_buf[i][1].y = data_y_end_buf[i][1].y + abs1;\r\n                // @ts-ignore\r\n                data_y_end_buf[i + 1][1].y = data_y_end_buf[i + 1][1].y + abs2;\r\n            }\r\n        }\r\n// @ts-ignore\r\n        data_y_end_buf.forEach((ttRow) => {\r\n            ttRow[0].drawTooltip(this.canvasTT.ctx, this.canvasTT.viewport, ttRow[1], ttRow[2], 0, true);\r\n        })\r\n    }\r\n\r\n\r\n}","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n","import { Chart } from \"../classes/Chart\"\r\nimport { Ticks } from \"../classes/Ticks\"\r\n\r\nexport let chart: Chart;\r\nlet cbhRow: number[] = [];\r\nlet xLabels: Date[] = [];\r\nlet zeroSeries: number[] = [];\r\n\r\nlet seriesLabeled: number[][];\r\nlet seriesText: string[]\r\nconst gapY: number = 0.08;\r\n\r\nconst bezier = require('bezier-easing');\r\nconst easing = bezier(0.65, 0, 0.35, 1);\r\n\r\n// @ts-ignore\r\nexport function createChart(container, data) {\r\n\r\n  // @ts-ignore\r\n  chart = new Chart(container, [0, 900], [0, 2000]);\r\n\r\n  [xLabels, cbhRow, zeroSeries, seriesLabeled, seriesText] = [...data];\r\n\r\n  // ось X\r\n  chart.xAxis.setOptions('start', 0.5, 'black');\r\n  chart.xAxis.display = true;\r\n  chart.xAxis.ticks.display = true;\r\n  // @ts-ignore\r\n  chart.xAxis.ticks.setCustomLabels(xLabels);\r\n  chart.xAxis.ticks.setOptions(true, 'customDateTicks', ['half month', 'year', 'half year', 'third year', 'quarter year']);\r\n  chart.xAxis.ticks.settickDrawOptions(-6, 0.5, 'black');\r\n  chart.xAxis.ticks.label.setOptions(true, '#B2B2B2', 'bottom', 11, ['12', '\"Transcript Pro\"'])\r\n  chart.xAxis.ticks.label.isUpperCase = true;\r\n  chart.xAxis.grid.setOptions(true, '#B2B2B2', 1, [1, 2]);\r\n\r\n  // ось Y\r\n  chart.yAxis.setOptions('end', 1, '#B2B2B2', [1, 2]);\r\n  chart.yAxis.display = true;\r\n  chart.yAxis.position = 'end';\r\n  chart.yAxis.ticks.setOptions(true, 'niceCbhStep', [1, 5, 10, 15, 20, 25, 30]);\r\n  chart.yAxis.ticks.settickDrawOptions(-50, 1, '#B2B2B2', [1, 2]);\r\n  chart.yAxis.ticks.label.setOptions(true, '#B2B2B2', 'right', 0, ['12', '\"Transcript Pro\"']);\r\n  chart.yAxis.ticks.label.setOffset(30, 10);\r\n  chart.yAxis.ticks.label.units = '%';\r\n  chart.yAxis.grid.setOptions(true, '#B2B2B2', 1, [1, 2]);\r\n\r\n  //добавляем custom ticks для Y\r\n  const zeroTick = new Ticks(chart.yAxis.type);\r\n  zeroTick.setOptions(true, 'zero');\r\n  zeroTick.settickDrawOptions(-50, 1, '#000000', [2, 1]);\r\n  zeroTick.label.display = false;\r\n  zeroTick.hasAnimation = true;\r\n  zeroTick.timeFunc = easing;\r\n  chart.yAxis.addCustomTicks(zeroTick);\r\n\r\n  const minTick = new Ticks(chart.yAxis.type);\r\n  minTick.setOptions(true, 'min');\r\n  minTick.settickDrawOptions(-50, 0.5, 'black', []);\r\n  minTick.label.display = false;\r\n  chart.yAxis.addCustomTicks(minTick);\r\n\r\n  // создаем Plots\r\n  chart.addPlot('black_line', 'line', 1, '#000000', []); //черная линия\r\n  chart.addPlot('light_gray_area', 'area_bottom', 0, '#F2F2F2', '#F2F2F2', 0); //серая заливка области\r\n  chart.addPlot('zero_line', 'line', 1, '#000000', [2, 1]); //пунктирная линия 0\r\n  chart.addPlot('labeled', 'text', 1, '#000000', '#000000') //график с лейблами\r\n    .label.setOptions(true, 'black', 'top', 10+15+10, ['18', '\"Transcript Pro\"'])\r\n    .setOutline({ width: 5, color: 'white' })\r\n\r\n  let seriesRow = calculateDeviationsVal(cbhRow, cbhRow[0]);\r\n  let seriesL = [seriesLabeled[0], calculateDeviationsVal(seriesLabeled[1], cbhRow[0])];\r\n\r\n  // создаем Series и привязвыаем к ним инструменты отрисовки Plots\r\n  chart.addSeriesRow('cyberHedge_area', [seriesRow]).setPlotsIds('light_gray_area');\r\n  chart.addSeriesRow('cyberHedge_line', [seriesRow]).setPlotsIds('black_line');\r\n  chart.addSeriesRow('zero_line', [zeroSeries]).setPlotsIds('zero_line');\r\n  chart.addSeries('cyberHedge_labels', seriesL, seriesText).setPlotsIds('labeled');\r\n\r\n\r\n\r\n  // настраиваем Min Max осей\r\n  chart.xAxis.setMinMax(chart.data.findExtremes('val'), false); //по экстремумам оси X\r\n  chart.yAxis.setMinMax(chart.data.findExtremes('ind', chart.xAxis.min, chart.xAxis.max), false); //scale to fit по Y\r\n  chart.yAxis.setMinMax([chart.yAxis.min - gapY * chart.yAxis.length, chart.yAxis.max + gapY * chart.yAxis.length], false); //добавляем по отступам как на сайте\r\n\r\n\r\n  //включаем анимацию\r\n  chart.xAxis.ticks.switchAnimation(true, 300);\r\n  chart.yAxis.ticks.switchAnimation(true, 300);\r\n  chart.switchDataAnimation(true, 300);\r\n  chart.data.changeAllSeriesAnimationTimeFunction(easing);\r\n  chart.setCanvasPaddings(25, 80, 40, 20); // задаем отступы для области отрисовки\r\n\r\n}\r\n\r\n\r\n// преобразование данных ряда из абсолютных величин в % относительно zeroPoint\r\nfunction calculateDeviationsVal(rowData: number[], zeroPoint: number) {\r\n  let chartDataVariation = [];\r\n  chartDataVariation = [];\r\n  for (let j = 0, m = rowData.length; j < m; j++) {\r\n    chartDataVariation.push(100 * (rowData[j] - zeroPoint) / zeroPoint);\r\n  }\r\n  return chartDataVariation;\r\n}\r\n\r\n\r\n// подключение слушателей к разметке как на cbh\r\n\r\n\r\n//функция вешает слушатели на панель ranges\r\n(function prepareRangesMenu() {\r\n  let ranges = document.querySelectorAll('.ranges_black li');\r\n  ranges.forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      // @ts-ignore\r\n      document.querySelector('.ranges_black li.selected').classList.remove('selected');\r\n      item.classList.add('selected');\r\n      const lastLb = xLabels[xLabels.length - 1];\r\n      let maxDate = lastLb,\r\n        minDate,\r\n        max = xLabels.length - 1,\r\n        min = 0;\r\n\r\n      switch (item.innerHTML) {\r\n        case '6M':\r\n          minDate = new Date(new Date(maxDate.getTime()).setMonth(maxDate.getMonth() - 6));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case '1Y':\r\n          minDate = new Date(new Date(maxDate.getTime()).setFullYear(maxDate.getFullYear() - 1));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case '2Y':\r\n          minDate = new Date(new Date(maxDate.getTime()).setFullYear(maxDate.getFullYear() - 2));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case 'YTD':\r\n          minDate = new Date(new Date(maxDate.getFullYear(), 0, 1).getTime()),\r\n            min = findDateInd(minDate);\r\n          break;\r\n\r\n      }\r\n\r\n      reorganizeChart(cbhRow, min, max, true);\r\n\r\n    });\r\n  })\r\n\r\n}());\r\n\r\n\r\n\r\n// настройка Chart\r\n// @ts-ignore\r\nfunction reorganizeChart(cbhRow, min, max, onlyData?: boolean) {\r\n\r\n  let seriesRow = calculateDeviationsVal(cbhRow, cbhRow[min]);\r\n  let seriesL = [seriesLabeled[0], calculateDeviationsVal(seriesLabeled[1], cbhRow[min])];\r\n\r\n  // создаем Series\r\n  chart.data.findSeriesById('cyberHedge_area')?.replaceSeriesData([seriesRow], false);\r\n  chart.data.findSeriesById('cyberHedge_line')?.replaceSeriesData([seriesRow], false);\r\n  chart.data.findSeriesById('zero_line')?.replaceSeriesData([zeroSeries], false);\r\n  chart.data.findSeriesById('cyberHedge_labels')?.replaceSeriesData(seriesL, false);\r\n\r\n  if (onlyData) {\r\n    // @ts-ignore\r\n    chart.xAxis.ticks.setCustomLabels(xLabels);\r\n    chart.xAxis.setMinMax([min, max], false);\r\n    const MinMaxY = chart.data.findExtremes('ind', min, max);\r\n    const lengthY = Math.abs(MinMaxY[0] - MinMaxY[1]);\r\n    chart.yAxis.setMinMax([MinMaxY[0] - gapY * lengthY, MinMaxY[1] + gapY * lengthY], true);\r\n  }\r\n}\r\n\r\n\r\n\r\n//поиск индекса ближайщей даты\r\nfunction findDateInd(date: Date) {\r\n  const ind = xLabels.reduce((prev, curr, i) => {\r\n    // @ts-ignore\r\n    const curDif = Math.abs(curr - date);\r\n    // @ts-ignore\r\n    const prevDif = Math.abs(xLabels[prev] - date);\r\n    if (curDif < prevDif) return i\r\n    return prev\r\n  }, 0);\r\n  return ind;\r\n}\r\n\r\n","import { Chart } from \"../classes/Chart\";\r\nimport { Ticks } from \"../classes/Ticks\";\r\nimport { customLoadDataFromCsv, csvToCols } from \"../scripts/helpers\";\r\n\r\nexport let chart: Chart;\r\nlet cbh1: number[] = [];\r\nlet cbh5: number[] = [];\r\nlet xLabels: Date[] = [];\r\nlet zeroSeries: number[] = [];\r\nconst gapY: number = 0.08;\r\n\r\nconst bezier = require('bezier-easing');\r\nconst easing = bezier(0.65, 0, 0.35, 1);\r\n\r\n// @ts-ignore\r\nexport function createChart(container, data) {\r\n  // @ts-ignore\r\n  chart = new Chart(container, [0, 900], [0, 2000]);\r\n\r\n  [xLabels, cbh5, cbh1, zeroSeries] = [...data];\r\n\r\n  setLastUpdateDate(xLabels[xLabels.length - 1]);\r\n  chart.tooltipsDataIndexUpdated.add(conncetRedWidget);\r\n  chart.tooltipsDataIndexUpdated.add(conncetBlueWidget);\r\n\r\n  // ось X\r\n  chart.xAxis.setOptions('start', 0.5, 'black');\r\n  // @ts-ignore\r\n  chart.xAxis.ticks.setCustomLabels(xLabels);\r\n  chart.xAxis.display = true;\r\n  chart.xAxis.ticks.setOptions(true, 'customDateTicks', ['half month', 'year', 'half year', 'third year', 'quarter year']);\r\n  chart.xAxis.ticks.display = true;\r\n  chart.xAxis.ticks.settickDrawOptions(-6, 0.5, 'black');\r\n  chart.xAxis.ticks.label.setOptions(true, '#B2B2B2', 'bottom', 11, ['12', '\"Transcript Pro\"'])\r\n  chart.xAxis.ticks.label.isUpperCase = true;\r\n\r\n\r\n  // ось Y\r\n  chart.yAxis.setOptions('end', 1, '#B2B2B2', [1, 2]);\r\n  chart.yAxis.display = true;\r\n  chart.yAxis.position = 'end';\r\n  chart.yAxis.ticks.settickDrawOptions(-50, 1, '#B2B2B2', [1, 2]);\r\n  chart.yAxis.ticks.setOptions(true, 'niceCbhStep', [1, 5, 10, 15, 20, 25, 30]);\r\n  chart.yAxis.ticks.label.setOptions(true, '#B2B2B2', 'right', 0, ['12', '\"Transcript Pro\"']).setOffset(30, 10);\r\n  chart.yAxis.ticks.label.units = '%';\r\n  chart.yAxis.grid.setOptions(true, '#B2B2B2', 1, [1, 2]);\r\n\r\n\r\n  //добавляем custom ticks для Y\r\n  const zeroTick = new Ticks(chart.yAxis.type);\r\n  zeroTick.setOptions(true, 'zero');\r\n  zeroTick.settickDrawOptions(-50, 1, '#000000', [2, 1]);\r\n  zeroTick.label.display = false;\r\n  zeroTick.hasAnimation = true;\r\n  zeroTick.timeFunc = easing;\r\n  chart.yAxis.addCustomTicks(zeroTick);\r\n\r\n  const minTick = new Ticks(chart.yAxis.type);\r\n  minTick.setOptions(true, 'min');\r\n  minTick.settickDrawOptions(-50, 0.5, 'black', []);\r\n  minTick.label.display = false;\r\n  chart.yAxis.addCustomTicks(minTick);\r\n\r\n  // создаем Plots\r\n  chart.addPlot('red_line', 'line', 1, '#FF2222', []);\r\n  chart.addPlot('red_area', 'area_bottom', 0, '#FFE5E5', '#FFE5E5', 0);\r\n  chart.addPlot('blue_line', 'line', 1, '#0070FF', []);\r\n  chart.addPlot('blue_area', 'area_bottom', 0, '#D9EAFF', '#D9EAFF', 0);\r\n  chart.addPlot('zero_line', 'line', 1, '#000000', [2, 1]); //пунктирная линия 0\r\n\r\n  // создаем Tooltipы\r\n\r\n  // lines\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'line_vertical_full', 1, '#B2B2B2', [1, 2]);\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'line_horizontal_end', 1, '#B2B2B2', [1, 2]);\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'line_horizontal_end', 1, '#B2B2B2', [1, 2]);\r\n\r\n  // circles\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'circle_series', 3, '#ffffff', '#0070FF', 4);\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'circle_series', 3, '#ffffff', '#FF2222', 4);\r\n  chart.findPlotById('black_line')?.addTooltip('ttId', 'circle_series', 3, '#ffffff', 'black', 4);\r\n\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'circle_y_end', 3, '#ffffff', '#0070FF', 4);\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'circle_y_end', 3, '#ffffff', '#FF2222', 4);\r\n\r\n  // labels\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'label_x_start', 0.5, 'black', '#ebebeb', 4, xLabels).label.setOptions(true, 'black', 'bottom', 14, ['12', '\"Transcript Pro\"']);\r\n\r\n  // data\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'data_y_end', 0.5, '#FF2222', '#FF2222', 4).label.setOptions(true, 'white', 'right', 30, ['12', '\"Transcript Pro\"']);\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'data_y_end', 0.5, '#0070FF', '#0070FF', 4).label.setOptions(true, 'white', 'right', 30, ['12', '\"Transcript Pro\"']);\r\n\r\n  // delta\r\n  chart.findPlotById('red_line')?.addTooltip('delta_1', 'delta_abs', 0.5, 'black', '#ebebeb', 4).label.setOptions(true, 'black', 'right', 35, ['12', '\"Transcript Pro\"']);\r\n  chart.findPlotById('blue_line')?.addTooltip('delta_1', 'delta_abs', 0.5, 'black', '#ebebeb', 4).label.setOptions(true, 'black', 'right', 35, ['12', '\"Transcript Pro\"']);\r\n\r\n  // подготавливаем данные как на сайте CyberHedge\r\n  let serie5star = calculateDeviationsVal(cbh5, cbh5[0]);\r\n  let serie1star = calculateDeviationsVal(cbh1, cbh1[0]);\r\n\r\n  // создаем Series\r\n  chart.addSeriesRow('cyberHedge5_area', [serie5star]).setPlotsIds('blue_area');\r\n  chart.addSeriesRow('cyberHedge1_area', [serie1star]).setPlotsIds('red_area');\r\n  chart.addSeriesRow('cyberHedge5_line', [serie5star]).setPlotsIds('blue_line');\r\n  chart.addSeriesRow('cyberHedge1_line', [serie1star]).setPlotsIds('red_line');\r\n  chart.addSeriesRow('zero_line', [zeroSeries]).setPlotsIds('zero_line');\r\n\r\n\r\n  // настраиваем Min Max осей\r\n  chart.xAxis.setMinMax(chart.data.findExtremes('val'), true); //по экстремумам оси X\r\n  chart.yAxis.setMinMax(chart.data.findExtremes('ind', chart.xAxis.min, chart.xAxis.max), true); //scale to fit по Y\r\n  chart.yAxis.setMinMax([chart.yAxis.min - gapY * chart.yAxis.length, chart.yAxis.max + gapY * chart.yAxis.length], true); //добавляем по отступам как на сайте\r\n\r\n  //включаем анимацию\r\n  chart.xAxis.ticks.switchAnimation(true, 300);\r\n  chart.yAxis.ticks.switchAnimation(true, 300);\r\n  chart.switchDataAnimation(true, 300);\r\n  chart.data.changeAllSeriesAnimationTimeFunction(easing);\r\n\r\n  chart.setCanvasPaddings(25, 80, 40, 20); // задаем отступы для области отрисовки\r\n\r\n}\r\n\r\n\r\n\r\n// преобразование данных ряда из абсолютных величин в % относительно zeroPoint\r\nfunction calculateDeviationsVal(rowData: number[], zeroPoint: number) {\r\n  let chartDataVariation = [];\r\n  chartDataVariation = [];\r\n  for (let j = 0, m = rowData.length; j < m; j++) {\r\n    chartDataVariation.push(100 * (rowData[j] - zeroPoint) / zeroPoint);\r\n  }\r\n  return chartDataVariation;\r\n}\r\n\r\n\r\n\r\n// подключение слушателей к разметке как на cbh\r\n\r\n//функция вешает слушатели на панель nav - USA / EU\r\n(function prepareCsvLoadMenu() {\r\n  let zoneItems = document.querySelectorAll('.zones_colored li');\r\n\r\n  zoneItems.forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      let link = item.querySelector('a');\r\n\r\n      // @ts-ignore\r\n      document.querySelector('.zones_colored li.selected').classList.remove('selected');\r\n      item.classList.add('selected');\r\n\r\n      const rangeSelected = document.querySelector('.ranges_сolored li.selected');\r\n\r\n      // @ts-ignore\r\n      customLoadDataFromCsv(link.href).then((data) => {\r\n        // @ts-ignore\r\n        let chartData = csvToCols(data);\r\n\r\n        cbh1 = chartData[2].slice(1).map((el) => { return +el });\r\n        cbh5 = chartData[1].slice(1).map((el) => { return +el });\r\n        xLabels = chartData[0].slice(1).map((el) => { return new Date(el) });\r\n        zeroSeries = cbh1.map(() => 0);\r\n\r\n        setLastUpdateDate(xLabels[xLabels.length - 1]);\r\n\r\n        const max = xLabels.length - 1;\r\n        const min = 0;\r\n        reorganizeChart(cbh5, cbh1, min, max, false);\r\n        // @ts-ignore\r\n        rangeSelected.click(rangeSelected);\r\n      })\r\n\r\n    });\r\n  });\r\n\r\n}());\r\n\r\n//функция вешает слушатели на панель ranges\r\n(function prepareRangesMenu() {\r\n  let ranges = document.querySelectorAll('.ranges_сolored li');\r\n  ranges.forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      // @ts-ignore\r\n      document.querySelector('.ranges_сolored li.selected').classList.remove('selected');\r\n      item.classList.add('selected');\r\n      const lastLb = xLabels[xLabels.length - 1];\r\n      let maxDate = lastLb,\r\n        minDate,\r\n        max = xLabels.length - 1,\r\n        min = 0;\r\n\r\n      switch (item.innerHTML) {\r\n        case '6M':\r\n          minDate = new Date(new Date(maxDate.getTime()).setMonth(maxDate.getMonth() - 6));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case '1Y':\r\n          minDate = new Date(new Date(maxDate.getTime()).setFullYear(maxDate.getFullYear() - 1));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case '2Y':\r\n          minDate = new Date(new Date(maxDate.getTime()).setFullYear(maxDate.getFullYear() - 2));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case 'YTD':\r\n          minDate = new Date(new Date(maxDate.getFullYear(), 0, 1).getTime()),\r\n            min = findDateInd(minDate);\r\n          break;\r\n      }\r\n\r\n      reorganizeChart(cbh5, cbh1, min, max, true);\r\n\r\n    });\r\n  })\r\n\r\n}());\r\n\r\n\r\n\r\n//настройка виджетов для отображения данных Тултипов\r\nconst redWidget = document.getElementById('cbhIdx1-val-colored');\r\nconst blueWidget = document.getElementById('cbhIdx5-val-colored');\r\n\r\nfunction conncetRedWidget(index: number) {\r\n  if (redWidget) redWidget.innerHTML = cbh1[index].toFixed(1);\r\n}\r\n\r\nfunction conncetBlueWidget(index: number) {\r\n  if (blueWidget) blueWidget.innerHTML = cbh5[index].toFixed(1);\r\n}\r\n\r\n\r\n// настройка Chart\r\n// @ts-ignore\r\nfunction reorganizeChart(cbh5, cbh1, min, max, onlyData?: boolean) {\r\n  // подготавливаем данные как на сайте CyberHedge\r\n  let serie5star = calculateDeviationsVal(cbh5, cbh5[min]);\r\n  let serie1star = calculateDeviationsVal(cbh1, cbh1[min]);\r\n\r\n  chart.data.findSeriesById('cyberHedge5_area')?.replaceSeriesData([serie5star],false);\r\n  chart.data.findSeriesById('cyberHedge1_area')?.replaceSeriesData([serie1star],false);\r\n  chart.data.findSeriesById('cyberHedge5_line')?.replaceSeriesData([serie5star],false);\r\n  chart.data.findSeriesById('cyberHedge1_line')?.replaceSeriesData([serie1star],false);\r\n  chart.data.findSeriesById('zero_line')?.replaceSeriesData([zeroSeries],false);\r\n\r\n  if (onlyData) {\r\n    // @ts-ignore\r\n    chart.xAxis.ticks.setCustomLabels(xLabels);\r\n    chart.xAxis.setMinMax([min, max], false);\r\n    const MinMaxY = chart.data.findExtremes('ind', min, max);\r\n    const lengthY = Math.abs(MinMaxY[0] - MinMaxY[1]);\r\n    chart.yAxis.setMinMax([MinMaxY[0] - gapY * lengthY, MinMaxY[1] + gapY * lengthY], true);\r\n  }\r\n}\r\n\r\n\r\nfunction setLastUpdateDate(lastDate: Date) {\r\n  // NOTE: fill last update node\r\n  let lastUpdateNode = document.querySelector('.last-update-colored time');\r\n  // @ts-ignore\r\n  lastUpdateNode.datetime = lastDate.toISOString();\r\n  // @ts-ignore\r\n  lastUpdateNode.innerHTML = [lastDate.getDate(), lastDate.toLocaleString('en-US', { month: 'long' }), lastDate.getFullYear()].join(' ');\r\n}\r\n\r\n\r\n//поиск индекса ближайщей даты\r\nfunction findDateInd(date: Date) {\r\n  const ind = xLabels.reduce((prev, curr, i) => {\r\n    // @ts-ignore\r\n    const curDif = Math.abs(curr - date);\r\n    // @ts-ignore\r\n    const prevDif = Math.abs(xLabels[prev] - date);\r\n    if (curDif < prevDif) return i\r\n    return prev\r\n  }, 0);\r\n  return ind;\r\n}\r\n\r\n","import { Chart } from \"../classes/Chart\"\r\nimport { customLoadDataFromCsv, csvToCols } from \"../scripts/helpers\";\r\n\r\nexport let chart: Chart;\r\nlet cbh1: number[] = [];\r\nlet cbh5: number[] = [];\r\nlet xLabels: Date[] = [];\r\nlet zeroSeries: number[] = [];\r\nconst gapY: number = 0.08;\r\n\r\n// @ts-ignore\r\nexport function createChart(container, data) {\r\n  // @ts-ignore\r\n  chart = new Chart(container, [0, 900], [0, 2000]);\r\n\r\n  [xLabels, cbh5, cbh1, zeroSeries] = [...data];\r\n\r\n  setLastUpdateDate(xLabels[xLabels.length - 1]);\r\n  chart.tooltipsDataIndexUpdated.add(conncetRedWidget);\r\n  chart.tooltipsDataIndexUpdated.add(conncetBlueWidget);\r\n\r\n  chart.setCanvasPaddings(25, 60, 40, 20); // задаем отступы для области отрисовки\r\n\r\n  // ось X\r\n  chart.xAxis.setOptions('start', 1, 'black');\r\n  chart.xAxis.ticks.display = true;\r\n  chart.xAxis.ticks.settickDrawOptions(6, 1, 'black');\r\n  chart.xAxis.ticks.label.setOptions(true, '#B2B2B2', 'bottom', 11, ['12', '\"Transcript Pro\"']);\r\n\r\n  // ось Y\r\n  chart.yAxis.setOptions('end', 1, '#B2B2B2', [1, 2]);\r\n  chart.yAxis.display = true;\r\n  chart.yAxis.position = 'end';\r\n  chart.yAxis.ticks.label.setOptions(true, '#B2B2B2', 'right', 20, ['12', '\"Transcript Pro\"']);\r\n\r\n  // создаем Plots\r\n  chart.addPlot('red_line', 'line', 1, '#FF2222', []);\r\n  chart.addPlot('red_area', 'area', 0, '#FFE5E5', '#FFE5E5', 0);\r\n  chart.addPlot('blue_line', 'line', 1, '#0070FF', []);\r\n  chart.addPlot('blue_area', 'area', 0, '#D9EAFF', '#D9EAFF', 0);\r\n  chart.addPlot('black_line', 'line', 1, '#000000', []);\r\n\r\n  // создаем Tooltipы\r\n\r\n  // lines\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'line_vertical_full', 1, '#B2B2B2', [1, 2]);\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'line_horizontal_end', 1, '#B2B2B2', [1, 2]);\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'line_horizontal_end', 1, '#B2B2B2', [1, 2]);\r\n\r\n  // circles\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'circle_series', 3, '#ffffff', '#0070FF', 4);\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'circle_series', 3, '#ffffff', '#FF2222', 4);\r\n  chart.findPlotById('black_line')?.addTooltip('ttId', 'circle_series', 3, '#ffffff', 'black', 4);\r\n\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'circle_y_end', 3, '#ffffff', '#0070FF', 4);\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'circle_y_end', 3, '#ffffff', '#FF2222', 4);\r\n\r\n  // labels\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'label_x_start', 0.5, 'black', '#ebebeb', 4, xLabels).label.setOptions(true, 'black', 'bottom', 14, ['12', '\"Transcript Pro\"']);\r\n\r\n  // data\r\n  chart.findPlotById('red_line')?.addTooltip('ttId', 'data_y_end', 0.5, '#FF2222', '#FF2222', 4).label.setOptions(true, 'white', 'right', 30, ['12', '\"Transcript Pro\"']);\r\n  chart.findPlotById('blue_line')?.addTooltip('ttId', 'data_y_end', 0.5, '#0070FF', '#0070FF', 4).label.setOptions(true, 'white', 'right', 30, ['12', '\"Transcript Pro\"']);\r\n\r\n  // delta\r\n  chart.findPlotById('red_line')?.addTooltip('delta_1', 'delta_abs', 0.5, 'black', '#ebebeb', 4).label.setOptions(true, 'black', 'right', 35, ['12', '\"Transcript Pro\"']);\r\n  chart.findPlotById('blue_line')?.addTooltip('delta_1', 'delta_abs', 0.5, 'black', '#ebebeb', 4).label.setOptions(true, 'black', 'right', 35, ['12', '\"Transcript Pro\"']);\r\n\r\n  // подготавливаем данные как на сайте CyberHedge\r\n  let dataNew = prepareDataforCbh(cbh5, cbh1, 0);\r\n  let {\r\n    serie5star,\r\n    area5starTop,\r\n    area5starBottom,\r\n    serie1star,\r\n    area1starTop,\r\n    area1starBottom\r\n  } = dataNew;\r\n\r\n  // создаем Series\r\n  chart.addSeriesRow('cyberHedge5_area', [area5starTop, area5starBottom]).setPlotsIds('blue_area');\r\n  chart.addSeriesRow('cyberHedge1_area', [area1starTop, area1starBottom]).setPlotsIds('red_area');\r\n  chart.addSeriesRow('cyberHedge5_line', [serie5star]).setPlotsIds('blue_line');\r\n  chart.addSeriesRow('cyberHedge1_line', [serie1star]).setPlotsIds('red_line');\r\n  chart.addSeriesRow('zero_line', [zeroSeries]).setPlotsIds('black_line');\r\n\r\n  //настраиваем параметры осей\r\n  chart.yAxis.ticks.setOptions(false, 'niceCbhStep', [1, 5, 10, 15, 20, 25, 30]);\r\n  chart.yAxis.ticks.label.units = '%';\r\n  // @ts-ignore\r\n  chart.xAxis.ticks.setCustomLabels(xLabels);\r\n  chart.xAxis.ticks.setOptions(true, 'customDateTicks', ['half month', 'year', 'half year', 'third year', 'quarter year']);\r\n  chart.xAxis.display = true;\r\n\r\n  // настраиваем Min Max осей\r\n\r\n  chart.xAxis.setMinMax(chart.data.findExtremes('val'), true); //по экстремумам оси X\r\n  chart.yAxis.setMinMax(chart.data.findExtremes('ind', chart.xAxis.min, chart.xAxis.max), true); //scale to fit по Y\r\n  chart.yAxis.setMinMax([chart.yAxis.min - gapY * chart.yAxis.length, chart.yAxis.max + gapY * chart.yAxis.length], true); //добавляем по отступам как на сайте\r\n\r\n  //включаем анимацию\r\n  const bezier = require('bezier-easing');\r\n  const easing = bezier(0.65, 0, 0.35, 1);\r\n\r\n  //включаем анимацию\r\n  chart.xAxis.ticks.switchAnimation(true, 300);\r\n  chart.yAxis.ticks.switchAnimation(true, 300);\r\n  chart.switchDataAnimation(true, 300);\r\n  chart.data.changeAllSeriesAnimationTimeFunction(easing);\r\n\r\n  chart.setCanvasPaddings(25, 60, 40, 20); // задаем отступы для области отрисовки\r\n\r\n}\r\n\r\n\r\n// подготоваливает данные для Chart\r\nexport function prepareDataforCbh(star5: number[], star1: number[], fromIndex: number) {\r\n  const arrLength = star5.length;\r\n  let serie5star = calculateDeviations(star5, fromIndex),\r\n    serie1star = calculateDeviations(star1, fromIndex),\r\n    area5starTop = [],\r\n    area5starBottom = [],\r\n    area1starTop = [],\r\n    area1starBottom = [];\r\n  for (let i = 0, l = arrLength; i < l; i++) {\r\n    let item5star = serie5star[i],\r\n      item1star = serie1star[i];\r\n    let elTop5 = (item5star > 0) ? ((item5star > item1star) ? item5star : item5star) : 0\r\n    area5starTop.push(elTop5);\r\n    let elBot5 = (item5star > 0) ? ((item1star > 0) ? ((item1star > item5star) ? item5star : item1star) : 0) : item5star\r\n    area5starBottom.push(elBot5);\r\n    let elTop1 = (item1star > 0) ? item1star : ((item5star > 0) ? 0 : ((item5star < item1star) ? item1star : item5star));\r\n    area1starTop.push(elTop1);\r\n    let elBot1 = (item1star > 0) ? 0 : ((item5star < item1star) ? item1star : item1star);\r\n    area1starBottom.push(elBot1);\r\n  }\r\n  return { serie5star, area5starTop, area5starBottom, serie1star, area1starTop, area1starBottom };\r\n}\r\n\r\n\r\n// перевод из абсолютных величин в %\r\nfunction calculateDeviations(rowData: number[], fromIndex: number) {\r\n  let chartDataVariation = [];\r\n  let zeroPoint = rowData[fromIndex];\r\n  chartDataVariation = [];\r\n  for (let j = 0, m = rowData.length; j < m; j++) {\r\n    chartDataVariation.push(100 * (rowData[j] - zeroPoint) / zeroPoint);\r\n  }\r\n  return chartDataVariation;\r\n}\r\n\r\n\r\n\r\n// подключение слушателей к разметке как на cbh\r\n\r\n//функция вешает слушатели на панель nav - USA / EU\r\n(function prepareCsvLoadMenu() {\r\n  let zoneItems = document.querySelectorAll('.index .zones li');\r\n\r\n  zoneItems.forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      let link = item.querySelector('a');\r\n\r\n\r\n      // @ts-ignore\r\n      document.querySelector('.index .zones li.selected').classList.remove('selected');\r\n      item.classList.add('selected');\r\n\r\n      const rangeSelected = document.querySelector('.ranges_indices li.selected');\r\n\r\n      // @ts-ignore\r\n      customLoadDataFromCsv(link.href).then((data) => {\r\n        // @ts-ignore\r\n        let chartData = csvToCols(data);\r\n\r\n        cbh1 = chartData[2].slice(1).map((el) => { return +el });\r\n        cbh5 = chartData[1].slice(1).map((el) => { return +el });\r\n        xLabels = chartData[0].slice(1).map((el) => { return new Date(el) });\r\n        zeroSeries = cbh1.map(() => 0);\r\n\r\n        setLastUpdateDate(xLabels[xLabels.length - 1]);\r\n\r\n        const max = xLabels.length - 1;\r\n        const min = 0;\r\n        reorganizeChart(cbh5, cbh1, min, max, false);\r\n        // @ts-ignore\r\n        rangeSelected.click(rangeSelected);\r\n      })\r\n\r\n    });\r\n  });\r\n\r\n}());\r\n\r\n//функция вешает слушатели на панель ranges\r\n(function prepareRangesMenu() {\r\n  let ranges = document.querySelectorAll('.ranges_indices li');\r\n  ranges.forEach((item) => {\r\n    item.addEventListener('click', () => {\r\n      // @ts-ignore\r\n      document.querySelector('.ranges_indices li.selected').classList.remove('selected');\r\n      item.classList.add('selected');\r\n      const lastLb = xLabels[xLabels.length - 1];\r\n      let maxDate = lastLb,\r\n        minDate,\r\n        max = xLabels.length - 1,\r\n        min = 0;\r\n\r\n      switch (item.innerHTML) {\r\n        case '6M':\r\n          minDate = new Date(new Date(maxDate.getTime()).setMonth(maxDate.getMonth() - 6));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case '1Y':\r\n          minDate = new Date(new Date(maxDate.getTime()).setFullYear(maxDate.getFullYear() - 1));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case '2Y':\r\n          minDate = new Date(new Date(maxDate.getTime()).setFullYear(maxDate.getFullYear() - 2));\r\n          min = findDateInd(minDate);\r\n          break;\r\n\r\n        case 'YTD':\r\n          minDate = new Date(new Date(maxDate.getFullYear(), 0, 1).getTime()),\r\n            min = findDateInd(minDate);\r\n          break;\r\n\r\n      }\r\n\r\n      reorganizeChart(cbh5, cbh1, min, max, true);\r\n\r\n    });\r\n  })\r\n\r\n}());\r\n\r\n\r\n\r\n//настройка виджетов для отображения данных Тултипов\r\nconst redWidget = document.getElementById('cbhIdx1-val');\r\nconst blueWidget = document.getElementById('cbhIdx5-val');\r\n\r\nfunction conncetRedWidget(index: number) {\r\n  if (redWidget) redWidget.innerHTML = cbh1[index].toFixed(1);\r\n}\r\n\r\nfunction conncetBlueWidget(index: number) {\r\n  if (blueWidget) blueWidget.innerHTML = cbh5[index].toFixed(1);\r\n}\r\n\r\n\r\n// настройка Chart\r\n// @ts-ignore\r\nfunction reorganizeChart(cbh5, cbh1, min, max, onlyData?: boolean) {\r\n  let data = prepareDataforCbh(cbh5, cbh1, min);\r\n  let {\r\n    serie5star,\r\n    area5starTop,\r\n    area5starBottom,\r\n    serie1star,\r\n    area1starTop,\r\n    area1starBottom\r\n  } = data;\r\n\r\n  chart.data.findSeriesById('cyberHedge5_area')?.replaceSeriesData([area5starTop, area5starBottom],false);\r\n  chart.data.findSeriesById('cyberHedge1_area')?.replaceSeriesData([area1starTop, area1starBottom],false);\r\n  chart.data.findSeriesById('cyberHedge5_line')?.replaceSeriesData([serie5star],false);\r\n  chart.data.findSeriesById('cyberHedge1_line')?.replaceSeriesData([serie1star],false);\r\n  chart.data.findSeriesById('zero_line')?.replaceSeriesData([zeroSeries],false);\r\n\r\n  if (onlyData) {\r\n    // @ts-ignore\r\n    chart.xAxis.ticks.setCustomLabels(xLabels);\r\n    chart.xAxis.setMinMax([min, max], false);\r\n    const MinMaxY = chart.data.findExtremes('ind', min, max);\r\n    const lengthY = Math.abs(MinMaxY[0] - MinMaxY[1]);\r\n    chart.yAxis.setMinMax([MinMaxY[0] - gapY * lengthY, MinMaxY[1] + gapY * lengthY], true);\r\n  }\r\n}\r\n\r\n\r\nfunction setLastUpdateDate(lastDate: Date) {\r\n  // NOTE: fill last update node\r\n  let lastUpdateNode = document.querySelector('.last-update time');\r\n  // @ts-ignore\r\n  lastUpdateNode.datetime = lastDate.toISOString();\r\n  // @ts-ignore\r\n  lastUpdateNode.innerHTML = [lastDate.getDate(), lastDate.toLocaleString('en-US', { month: 'long' }), lastDate.getFullYear()].join(' ');\r\n}\r\n\r\n\r\n//поиск индекса ближайщей даты\r\nfunction findDateInd(date: Date) {\r\n  const ind = xLabels.reduce((prev, curr, i) => {\r\n    // @ts-ignore\r\n    const curDif = Math.abs(curr - date);\r\n    // @ts-ignore\r\n    const prevDif = Math.abs(xLabels[prev] - date);\r\n    if (curDif < prevDif) return i\r\n    return prev\r\n  }, 0);\r\n  return ind;\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\n//import { Signal } from \"signals\"\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { Label } from \"./Label\";\r\n\r\nexport class Legend {\r\n    \r\n    text: string[];\r\n    label: Label;\r\n    getCoord: (viewport: Rectangle) => Point;\r\n\r\n    constructor( text:string[], getCoord: (viewport: Rectangle) => Point ) {\r\n        this.text = text;\r\n        this.label = new Label();\r\n        this.getCoord = getCoord;\r\n\r\n        return this;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, vp:Rectangle) {\r\n        const coord = this.getCoord(vp);\r\n        this.text.forEach((textrow) => {\r\n            this.label.draw(ctx, coord, textrow);\r\n            coord.y = coord.y + this.label.fontSize;\r\n        })\r\n        \r\n    }\r\n\r\n\r\n}","import { Chart } from \"../classes/Chart\"\r\nimport { Legend } from '../classes/Legend';\r\nimport { Point } from '../classes/Point';\r\nimport { Rectangle } from '../classes/Rectangle';\r\nimport { Ticks } from \"../classes/Ticks\"\r\n\r\nexport let chart: Chart;\r\n\r\n// @ts-ignore\r\nexport function prepareData(data): any[] {\r\n  //разбираем CSV по рядам\r\n  let x, y, labels;\r\n  const oneX: number[] = [1.3];\r\n  const oneY: number[] = [2.5];\r\n  // @ts-ignore\r\n  x = data[0].slice(1).map((el) => { return +el });\r\n  // @ts-ignore\r\n  y = data[1].slice(1).map((el) => { return +el });\r\n  // @ts-ignore\r\n  labels = data[2].slice(1).map((el) => { return el });\r\n  return [x, y, oneX, oneY, labels];\r\n}\r\n\r\n//функция создает и настраивает Chart квадратный\r\n// @ts-ignore\r\nexport function createChart(container, data) {\r\n  // @ts-ignore\r\n  chart = new Chart(container, [0, 5], [0, 5]);\r\n\r\n  let x, y, oneX, oneY, labels;\r\n  [x, y, oneX, oneY, labels] = [...data];\r\n\r\n  // ось X\r\n  chart.xAxis.setOptions('end', 1, 'black');\r\n  chart.xAxis.ticks.setOptions(false, 'fixedCount', 5);\r\n  chart.xAxis.ticks.label.setOptions(false, '#B2B2B2', 'bottom', 11, ['12', '\"Transcript Pro\"']);\r\n  chart.xAxis.grid.setOptions(true, 'black', 0.5, []);\r\n  chart.xAxis.setName('Capital Managment', 'start').label.setOptions(true, 'black', 'top', -30, ['18', '\"Transcript Pro\"']);\r\n\r\n  //легенда для оси X\r\n  const lowRisk = new Legend(['Low', 'Risk'], function (vp: Rectangle): Point { return new Point(vp.x1 - 25, vp.y2 + 25) })\r\n  lowRisk.label.setOptions(true, 'black', 'top', 0, ['14', '\"Transcript Pro\"']);\r\n  chart.xAxis.addLegend(lowRisk);\r\n\r\n  const highRisk = new Legend(['High', 'Risk'], function (vp: Rectangle): Point { return new Point(vp.x2 + 25, vp.y1 - 25) })\r\n  highRisk.label.setOptions(true, 'black', 'top', 0, ['14', '\"Transcript Pro\"']);\r\n  chart.xAxis.addLegend(highRisk);\r\n\r\n  //добавляем custom ticks для X\r\n  const newTicks = new Ticks(chart.xAxis.type);\r\n  newTicks.setOptions(false, 'midStep', 5);\r\n  newTicks.label.setOptions(true, '#B2B2B2', 'top', 17, ['25', '\"Transcript Pro\"'], ['#60bb4c', '#accd5a', '#eed15c', '#ee9c58', '#e94f49']);\r\n  newTicks.setCustomLabels(['●'])\r\n  chart.xAxis.addCustomTicks(newTicks);\r\n\r\n  // ось Y\r\n  chart.yAxis.setOptions('end', 1, '#B2B2B2');\r\n  chart.yAxis.ticks.setOptions(false, 'fixedCount', 5);\r\n  chart.yAxis.ticks.label.setOptions(false, '#B2B2B2', 'right', 20, ['12', '\"Transcript Pro\"']);\r\n  chart.yAxis.grid.setOptions(true, 'black', 0.5, []);\r\n\r\n  chart.yAxis.setName('Vulnerability', 'start').label.setOptions(true, 'black', 'right', -10, ['18', '\"Transcript Pro\"']);\r\n  chart.yAxis.label.rotationAngle = -90;\r\n\r\n  //добавляем custom ticks для Y\r\n  const newYTicks = new Ticks(chart.yAxis.type);\r\n  newYTicks.setOptions(false, 'midStep', 5);\r\n  newYTicks.label.setOptions(true, '#B2B2B2', 'right', 30, ['25', '\"Transcript Pro\"'], ['#60bb4c', '#accd5a', '#eed15c', '#ee9c58', '#e94f49']);\r\n  newYTicks.setCustomLabels(['●'])\r\n  chart.yAxis.addCustomTicks(newYTicks);\r\n\r\n  // контур графика\r\n  chart.hasBorder = true;\r\n\r\n  // создаем Plots\r\n  chart.addPlot('uni_circles', 'unicode', 20, '#454e56', '●');\r\n  chart.addPlot('uni_triangle', 'unicode', 20, '#454e56', '▼');\r\n\r\n  //tt\r\n  chart.findPlotById('uni_circles')?.addTooltip('ttId', 'data_label', 0.5, 'black', '#ebebeb', labels).label.setOptions(true, 'black', 'top', 15, ['12', '\"Transcript Pro\"']);\r\n  //chart.findPlotById('uni_triangle')?.addTooltip('ttId', 'data_label', 0.5, 'black', '#ebebeb', labels).label.setOptions('black', 'top', 15, ['12', '\"Transcript Pro\"']);\r\n\r\n  // создаем Series\r\n  chart.addSeries('portfolio', [x, y]).setPlotsIds('uni_circles');\r\n  chart.addSeries('portfolio_1', [oneX, oneY]).setPlotsIds('uni_triangle');\r\n\r\n  //включаем анимацию\r\n  const bezier = require('bezier-easing');\r\n  const easing = bezier(0.65, 0, 0.35, 1);\r\n\r\n  chart.xAxis.ticks.switchAnimation(false, 300);\r\n  chart.yAxis.ticks.switchAnimation(false, 300);\r\n  chart.switchDataAnimation(true, 300);\r\n  chart.data.changeAllSeriesAnimationTimeFunction(easing);\r\n\r\n  //обавляем фон\r\n  chart.addBackGround('coloredGrid_cbh');\r\n\r\n  // делаем квадратное соотношение\r\n  chart.switchResolution();\r\n  // задаем отступы для области отрисовки\r\n  chart.setCanvasPaddings(60, 60, 60, 60);\r\n\r\n  // элементы управления\r\n  const randBtn = document.getElementById('rand_btn');\r\n  //@ts-ignore\r\n  randBtn.addEventListener('click', () => {\r\n    reorganizeChart();\r\n  })\r\n}\r\n\r\n\r\nexport function reorganizeChart() {\r\n  let x, y, oneX, oneY, labels;\r\n\r\n  x = [];\r\n  y = [];\r\n  labels = [];\r\n\r\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const charactersLength = characters.length;\r\n  const newLength = 1 + Math.round(Math.random() * 16);\r\n\r\n  for (let i = 0; i < newLength; i++) {\r\n    x.push(0.1 + Math.random() * 4.8);\r\n    y.push(0.1 + Math.random() * 4.8);\r\n    labels.push(characters.charAt(Math.floor(Math.random() * charactersLength)))\r\n  }\r\n\r\n  oneX = [0.1 + Math.random() * 4.8];\r\n  oneY = [0.1 + Math.random() * 4.8];\r\n\r\n  chart.data.findSeriesById('portfolio')?.replaceSeriesData([x, y], true);\r\n  chart.data.findSeriesById('portfolio_1')?.replaceSeriesData([oneX, oneY], true);\r\n  // @ts-ignore\r\n  chart.findPlotById('uni_circles')?.findTooltipById('ttId').labels = labels;\r\n}\r\n\r\n\r\n\r\n/* index.ts\r\n\r\n\r\n// @ts-ignore\r\nimport WebFont from 'webfontloader';\r\n\r\nimport { customLoadDataFromCsv, csvToCols } from \"./scripts/helpers\"\r\nimport { Chart } from \"./classes/Chart\"\r\n\r\n// выбираем config\r\nimport { prepareData, createChart, reorganizeChart } from \"./configs/square-chart\"\r\n\r\n//подгрузка CSV файла\r\nconst sqrData = require('./data/cbhVulnerability_test.csv');\r\n\r\n\r\n//объявляем переменные\r\nlet chart: Chart;\r\nconst chartContainer = document.getElementById('indexChart');\r\nconst fonts = ['Transcript Pro'];\r\n\r\n\r\n// проверка подгрузки шрифта\r\nconst WebFont = require('webfontloader')\r\n\r\nWebFont.load({\r\n  custom: {\r\n    families: fonts,\r\n  },\r\n\r\n  active: function () {\r\n\r\n    customLoadDataFromCsv(sqrData).then((data) => {\r\n      // @ts-ignore\r\n      let chartData = csvToCols(data);\r\n      //разбираем CSV по рядам\r\n      chartData = prepareData(chartData);\r\n      //создаем chart\r\n      chart = createChart(chartContainer, [...chartData]);\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/","// browserify ./src/index.ts -p [ tsify --noImplicitAny ] > chart-bundle.js\r\n\r\n// @ts-ignore\r\n\r\n// @ts-ignore\r\nimport WebFont from 'webfontloader';\r\n\r\n// helpers\r\nimport { customLoadDataFromCsv, csvToCols } from \"./scripts/helpers\"\r\n\r\n// config cbh-indicies-black\r\nimport { createChart as createChart_ind_black } from \"./configs/indices-chart-black\";\r\n\r\n// config cbh-indicies-colored\r\nimport { createChart as createChart_ind_colored } from \"./configs/indices-chart-colored\";\r\n\r\n// config cbh-indicies\r\nimport { createChart as createChart_ind } from \"./configs/indices-chart\";\r\n\r\n// config square-chart\r\nimport { createChart as createChartSQR } from \"./configs/square-chart\"\r\nimport { prepareData } from \"./configs/square-chart\"\r\n\r\n//пути до CSV файлов\r\nconst sqrData = './src/data/cbhVulnerability_test.csv';\r\nconst EU = './src/data/cbhPlotData_EU.csv';\r\nconst EU_Labels = './src/data/cbhPlotData_EU_labeled.csv';\r\nconst startCSVurl = './src/data/cbhPlotData_US.csv';\r\n\r\n\r\n\r\n// проверка подгрузки шрифта\r\nWebFont.load({\r\n  custom: {\r\n    families: ['Transcript Pro']\r\n  },\r\n\r\n  active: function () {\r\n\r\n    // черно-белый график\r\n    customLoadDataFromCsv(EU).then((data) => { //загружаем первый CSV с данными для серии\r\n\r\n      customLoadDataFromCsv(EU_Labels).then((dataLables) => { // загружаем второй CSV с данными для серии с подписями\r\n        const chartContainer = document.getElementById('indexChart_0');\r\n        // @ts-ignore\r\n        let chartData = csvToCols(data);\r\n        let cbh = chartData[1].slice(1).map((el) => { return +el });\r\n        let xLabels = chartData[0].slice(1).map((el) => { return new Date(el) });\r\n        let zeroSeries = cbh.map(() => 0);\r\n\r\n        // @ts-ignore\r\n        let chartLables = csvToCols(dataLables);\r\n        let x = chartLables[0].slice(1).map((el) => { return +el });\r\n        let y = chartLables[1].slice(1).map((el) => { return +el });\r\n        let texts = chartLables[2].slice(1).map((el) => { return el });\r\n\r\n        createChart_ind_black(chartContainer, [xLabels, cbh, zeroSeries, [x, y], texts]); //кастомная функция создания и настройки объекта Chart\r\n\r\n      })\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n\r\n    // цветной график CBH-indices-colored\r\n    customLoadDataFromCsv(startCSVurl).then((data) => {\r\n      const chartContainer = document.getElementById('indexChart_1');\r\n      // @ts-ignore\r\n      let chartData = csvToCols(data);\r\n      let cbh1 = chartData[2].slice(1).map((el) => { return +el });\r\n      let cbh5 = chartData[1].slice(1).map((el) => { return +el });\r\n      let xLabels = chartData[0].slice(1).map((el) => { return new Date(el) });\r\n      let zeroSeries = cbh1.map(() => 0);\r\n\r\n      // вызов функции создания графика из конфига .src/configs/indices-chart-colored.ts\r\n      createChart_ind_colored(chartContainer, [xLabels, cbh5, cbh1, zeroSeries]);\r\n\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n\r\n\r\n    // старый график CBH-indices\r\n    customLoadDataFromCsv(startCSVurl).then((data) => {\r\n      const chartContainer = document.getElementById('indexChart_2');\r\n      // @ts-ignore\r\n      let chartData = csvToCols(data);\r\n      let cbh1 = chartData[2].slice(1).map((el) => { return +el });\r\n      let cbh5 = chartData[1].slice(1).map((el) => { return +el });\r\n      let xLabels = chartData[0].slice(1).map((el) => { return new Date(el) });\r\n      let zeroSeries = cbh1.map(() => 0);\r\n\r\n      createChart_ind(chartContainer, [xLabels, cbh5, cbh1, zeroSeries]);\r\n\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n\r\n\r\n    // квадратный график\r\n    customLoadDataFromCsv(sqrData).then((data) => {\r\n      const chartContainer = document.getElementById('indexChart_3');\r\n      // @ts-ignore\r\n      let chartData = csvToCols(data);\r\n      //разбираем CSV по рядам\r\n      chartData = prepareData(chartData);\r\n      //создаем chart\r\n      createChartSQR(chartContainer, [...chartData]);\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n\r\n\r\n  },\r\n});\r\n\r\n"]}